{
  "Order": 1,
  "Title": "快速上手",
  "Html": "<p>Ant Design of Blazor 致力于提供给程序员<strong>愉悦</strong>的开发体验。</p>\n<blockquote>\n<p>在开始之前，推荐先学习 <a href=\"https://blazor.net\">Blazor</a> 和 <a href=\"https://dot.net/\">.Net Core</a>，并正确安装和配置了 <a href=\"https://dotnet.microsoft.com/download\">.NET Core SDK</a> 3.1.300 或以上。官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的初级知识，并且已经完全掌握了 Blazor 的正确开发方式。如果你刚开始学习.NET 或者 Blazor，将 UI 框架作为你的第一步可能不是最好的主意。</p>\n</blockquote>\n<h2>第一个本地实例</h2>\n<p>实际项目开发中，你会需要对 C# 代码的构建、调试、代理、打包部署等一系列工程化的需求。\n我们强烈建议使用官方的 Visual Studio 2019 或者 VS Code 进行开发，下面我们用一个简单的实例来说明。</p>\n<h3>创建一个 Blazor WebAssembly 项目</h3>\n<blockquote>\n<p>在创建项目之前，请确保 <code>.NET Core SDK 3.1.300+</code> 已被成功安装。</p>\n</blockquote>\n<p>执行以下命令，<code>dotnet cli</code> 会在当前目录下新建一个名称为 <code>PROJECT-NAME</code> 的文件夹，并自动安装好相应依赖。</p>\n<pre><code class=\"language-bash\">$ dotnet new blazorwasm -o PROJECT-NAME\n</code></pre>\n<h3>开发调试</h3>\n<p>一键启动调试，运行成功后显示模板页面。</p>\n<pre><code class=\"language-bash\">$ dotnet run\n</code></pre>\n<h3>构建和部署</h3>\n<pre><code class=\"language-bash\">$ dotnet publish -c release -o dist\n</code></pre>\n<p>入口文件会构建到 <code>dist/wwwroot</code> 目录中，你可以自由部署到不同环境中进行引用。</p>\n<h3>安装组件</h3>\n<pre><code class=\"language-bash\">$ dotnet add package AntDesign\n</code></pre>\n<h3>引入样式</h3>\n<h4>使用样式与脚本</h4>\n<p>在 <code>wwwroot/index.html</code> 中引入了</p>\n<pre><code class=\"language-html\">  &lt;link href=&quot;_content/AntDesign/css/ant-design-blazor.css&quot; rel=&quot;stylesheet&quot; /&gt;\n  &lt;script src=&quot;_content/AntDesign/js/ant-design-blazor.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>然后在 Razor 模板中使用：</p>\n<pre><code class=\"language-html\">&lt;Button Type=&quot;primary&quot;&gt;Primary&lt;/Button&gt;\n</code></pre>\n"
}