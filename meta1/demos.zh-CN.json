[
  {
    "Title": "Components Overview",
    "SubTitle": "组件总览",
    "Type": "组件总览",
    "Desc": "<p><code>antd</code>为 Web 应用提供了丰富的基础 UI 组件，我们还将持续探索企业级应用的最佳 UI 实践。除了官方组件，我们也提供了社区精选组件作为必要的补充。</p>\n",
    "ApiDoc": ""
  },
  {
    "Title": "Button",
    "SubTitle": "按钮",
    "Type": "通用",
    "Desc": "<p>按钮用于开始一个即时操作。</p>\n<h2>何时使用</h2>\n<p>标记了一个（或封装一组）操作命令，响应用户点击行为，触发相应的业务逻辑。</p>\n<p>在 Ant Design 中，我们有四种按钮。</p>\n<ul>\n<li>主按钮：用于主行动点，一个操作区域只能有一个主按钮。</li>\n<li>默认按钮：用于没有主次之分的一组行动点。</li>\n<li>虚线按钮：常用于添加操作。</li>\n<li>链接按钮：用于次要或外链的行动点。</li>\n</ul>\n<p>以及四种状态属性与上面配合使用。</p>\n<ul>\n<li>危险：删除/移动/修改权限等危险操作，一般需要二次确认。</li>\n<li>幽灵：用于背景色比较复杂的地方，常用在首页/产品页等展示场景。</li>\n<li>禁用：行动点不可用的时候，一般需要文案解释。</li>\n<li>加载中：用于异步操作等待反馈的时候，也可以避免多次提交。</li>\n</ul>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/fNUKzY1sk/Button.svg"
  },
  {
    "Title": "Icon",
    "SubTitle": "图标",
    "Type": "通用",
    "Desc": "<p>语义化的矢量图形。</p>\n<h2>设计师专属</h2>\n<p>安装 Kitchen Sketch 插件 \uD83D\uDC8E，就可以一键拖拽使用 Ant Design 和 Iconfont 的海量图标，还可以关联自有项目。</p>\n<h2>图标列表</h2>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Common Icon</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ClassName</td>\n<td>设置图标的样式名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>设置图标的样式，例如 fontSize 和 color</td>\n<td>Css propertities</td>\n<td></td>\n</tr>\n<tr>\n<td>Spin</td>\n<td>是否有旋转动画</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Rotate</td>\n<td>图标旋转角度（IE9 无效）</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>TwoToneColor</td>\n<td>仅适用双色图标。设置双色图标的主要颜色</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>We still have three different themes for icons, icon component name is the icon name suffixed by the theme name.</p>\n<p>Custom Icon</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Style</td>\n<td>设置图标的样式，例如 fontSize 和 color</td>\n<td>CSSProperties</td>\n<td></td>\n</tr>\n<tr>\n<td>Spin</td>\n<td>是否有旋转动画</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Rotate</td>\n<td>图标旋转角度（IE9 无效）</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Component</td>\n<td>控制如何渲染图标，通常是一个渲染根标签为 <svg> 的 React 组件</td>\n<td></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/rrwbSt3FQ/Icon.svg"
  },
  {
    "Title": "Typography",
    "SubTitle": "排版",
    "Type": "通用",
    "Desc": "<p>文本的基本格式。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当需要展示标题、段落、列表内容时使用，如文章/博客/日志的文本样式。</li>\n<li>当需要一列基于文本的基础操作时，如拷贝/省略/可编辑。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Typography.Text</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Code</td>\n<td>添加代码样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Copyable</td>\n<td>是否可拷贝，为对象时可设置复制文本以回调函数</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Delete</td>\n<td>添加删除线样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用文本</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Editable</td>\n<td>是否可编辑，为对象时可对编辑进行控制</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Ellipsis</td>\n<td>设置自动溢出省略，需要设置元素宽度</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Mark</td>\n<td>添加标记样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Keyboard</td>\n<td>添加键盘样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Underline</td>\n<td>添加下划线样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>当用户提交编辑内容时触发</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Strong</td>\n<td>是否加粗</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>文本类型 <code>secondary</code> <code>warning</code> <code>danger</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Typography.Title</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Copyable</td>\n<td>是否可拷贝，为对象时可设置复制文本以回调函数</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Delete</td>\n<td>添加删除线样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用文本</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Editable</td>\n<td>是否可编辑，为对象时可对编辑进行控制</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Ellipsis</td>\n<td>设置自动溢出省略，需要设置元素宽度</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Mark</td>\n<td>添加标记样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Level</td>\n<td>重要程度，相当于 h1、h2、h3、h4</td>\n<td>int</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Underline</td>\n<td>添加下划线样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>当用户提交编辑内容时触发</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>文本类型 <code>secondary</code> <code>warning</code> <code>danger</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Typography.Paragraph</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Copyable</td>\n<td>是否可拷贝，为对象时可设置复制文本以回调函数</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Delete</td>\n<td>添加删除线样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用文本</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Editable</td>\n<td>是否可编辑，为对象时可对编辑进行控制</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Ellipsis</td>\n<td>设置自动溢出省略，需要设置元素宽度</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Mark</td>\n<td>添加标记样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Underline</td>\n<td>添加下划线样式</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>当用户提交编辑内容时触发</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Strong</td>\n<td>是否加粗</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>文本类型 <code>secondary</code> <code>warning</code> <code>danger</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/GOM1KQ24O/Typography.svg"
  },
  {
    "Title": "Divider",
    "SubTitle": "分割线",
    "Type": "布局",
    "Desc": "<p>区隔内容的分割线。</p>\n<h2>何时使用</h2>\n<ul>\n<li>对不同章节的文本段落进行分割。</li>\n<li>对行内文字/链接进行分割，例如表格的操作列。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>时间轴</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Dashed</td>\n<td>是否虚线</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Orientation</td>\n<td>分割线标题的位置 <code>left</code>, <code>right</code>, <code>center</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>分割线样式对象</td>\n<td>CSS properties</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>水平还是垂直类型 <code>horizontal</code> or <code>vertical</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Plain</td>\n<td>文字是否显示为普通正文样式</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/5swjECahe/Divider.svg"
  },
  {
    "Title": "Grid",
    "SubTitle": "栅格",
    "Type": "布局",
    "Desc": "<p>24 栅格系统。</p>\n<h2>设计理念</h2>\n<p>在多数业务情况下，Ant Design 需要在设计区域内解决大量信息收纳的问题，因此在 12 栅格系统的基础上，我们将整个设计建议区域按照 24 等分的原则进行划分。</p>\n<p>划分之后的信息区块我们称之为『盒子』。建议横向排列的盒子数量最多四个，最少一个。『盒子』在整个屏幕上占比见上图。设计部分基于盒子的单位定制盒子内部的排版规则，以保证视觉层面的舒适感。</p>\n<h2>概述</h2>\n<p>布局的栅格化系统，我们是基于行（row）和列（col）来定义信息区块的外部框架，以保证页面的每个区域能够稳健地排布起来。下面简单介绍一下它的工作原理：</p>\n<ul>\n<li>通过 row 在水平方向建立一组 column（简写 col）</li>\n<li>你的内容应当放置于 col 内，并且，只有 col 可以作为 row 的直接元素</li>\n<li>栅格系统中的列是指 1 到 24 的值来表示其跨越的范围。例如，三个等宽的列可以使用 <Col span={8} /> 来创建</li>\n<li>如果一个 row 中的 col 总和超过 24，那么多余的 col 会作为一个整体另起一行排列\n我们的栅格化系统基于 Flex 布局，允许子元素在父节点内的水平对齐方式 - 居左、居中、居右、等宽排列、分散排列。子元素与子元素之间，支持顶部对齐、垂直居中对齐、底部对齐的方式。同时，支持使用 order 来定义元素的排列顺序。</li>\n</ul>\n<p>布局是基于 24 栅格来定义每一个『盒子』的宽度，但不拘泥于栅格。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Row</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>align</td>\n<td>flex 布局下的垂直对齐方式：<code>top</code> <code>middle</code> <code>bottom</code></td>\n<td>string</td>\n<td>top</td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 { xs: 8, sm: 16, md: 24}。或者使用数组形式同时设置 [水平间距, 垂直间距]（1.5.0 后支持）。</td>\n<td>number, object, array</td>\n<td>0</td>\n</tr>\n<tr>\n<td>justify</td>\n<td>flex 布局下的水平排列方式：<code>start</code> <code>end</code> <code>center</code> <code>space-around</code> <code>space-between</code></td>\n<td>string</td>\n<td>start</td>\n</tr>\n<tr>\n<td>type</td>\n<td>布局模式，可选 <code>flex</code>，现代浏览器 下有效</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Col</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>offset</td>\n<td>栅格左侧的间隔格数，间隔内不可以有栅格</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>order</td>\n<td>栅格顺序，<code>flex</code> 布局模式下有效</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>pull</td>\n<td>栅格向左移动格数</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>push</td>\n<td>栅格向右移动格数效</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>span</td>\n<td>栅格占位格数，为 0 时相当于 <code>display: none</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>xs</td>\n<td><code>&lt;576px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象效</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>sm</td>\n<td><code>≥576px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>md</td>\n<td><code>≥768px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>lg</td>\n<td><code>≥992px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象效</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>xl</td>\n<td><code>≥1200px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>xxl</td>\n<td><code>≥1600px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td>\n<td>int</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>响应式栅格的断点扩展自 BootStrap 4 的规则（不包含链接里 <code>occasionally</code> 的部分)。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/5rWLU27so/Grid.svg"
  },
  {
    "Title": "Layout",
    "SubTitle": "布局",
    "Type": "布局",
    "Desc": "<p>协助进行页面级整体布局。</p>\n<h2>设计规则</h2>\n<h3>尺寸</h3>\n<p>一级导航项偏左靠近 logo 放置，辅助菜单偏右放置。</p>\n<ul>\n<li>顶部导航（大部分系统）：一级导航高度 <code>64px</code>，二级导航 <code>48px</code>。</li>\n<li>顶部导航（展示类页面）：一级导航高度 <code>80px</code>，二级导航 <code>56px</code>。</li>\n<li>顶部导航高度的范围计算公式为：<code>48+8n</code>。</li>\n<li>侧边导航宽度的范围计算公式：<code>200+8n</code>。</li>\n</ul>\n<h3>交互</h3>\n<ul>\n<li>一级导航和末级的导航需要在可视化的层面被强调出来；</li>\n<li>当前项应该在呈现上优先级最高；</li>\n<li>当导航收起的时候，当前项的样式自动赋予给它的上一个层级；</li>\n<li>左侧导航栏的收放交互同时支持手风琴和全展开的样式，根据业务的要求进行适当的选择。</li>\n</ul>\n<h3>视觉</h3>\n<p>导航样式上需要根据信息层级合理的选择样式：</p>\n<ul>\n<li><p><strong>大色块强调</strong></p>\n<p>建议用于底色为深色系时，当前页面父级的导航项。</p>\n</li>\n<li><p><strong>高亮火柴棍</strong></p>\n<p>当导航栏底色为浅色系时使用，可用于当前页面对应导航项，建议尽量在导航路径的最终项使用。</p>\n</li>\n<li><p><strong>字体高亮变色</strong></p>\n<p>从可视化层面，字体高亮的视觉强化力度低于大色块，通常在当前项的上一级使用。</p>\n</li>\n<li><p><strong>字体放大</strong></p>\n<p><code>12px</code>、<code>14px</code> 是导航的标准字号，14 号字体用在一、二级导航中。字号可以考虑导航项的等级做相应选择。</p>\n</li>\n</ul>\n<h2>组件概述</h2>\n<ul>\n<li><code>Layout</code>：布局容器，其下可嵌套 <code>Header</code> <code>Sider</code> <code>Content</code> <code>Footer</code> 或 <code>Layout</code> 本身，可以放在任何父容器中。</li>\n<li><code>Header</code>：顶部布局，自带默认样式，其下可嵌套任何元素，只能放在 <code>Layout</code> 中。</li>\n<li><code>Sider</code>：侧边栏，自带默认样式及基本功能，其下可嵌套任何元素，只能放在 <code>Layout</code> 中。</li>\n<li><code>Content</code>：内容部分，自带默认样式，其下可嵌套任何元素，只能放在 <code>Layout</code> 中。</li>\n<li><code>Footer</code>：底部布局，自带默认样式，其下可嵌套任何元素，只能放在 <code>Layout</code> 中。</li>\n</ul>\n<blockquote>\n<p>注意：采用 flex 布局实现，请注意<a href=\"http://caniuse.com/#search=flex\">浏览器兼容性</a>问题。</p>\n</blockquote>\n",
    "ApiDoc": "<h2>API</h2>\n<pre><code class=\"language-jsx\">&lt;Layout&gt;\n  &lt;Header&gt;header&lt;/Header&gt;\n  &lt;Layout&gt;\n    &lt;Sider&gt;left sidebar&lt;/Sider&gt;\n    &lt;Content&gt;main content&lt;/Content&gt;\n    &lt;Sider&gt;right sidebar&lt;/Sider&gt;\n  &lt;/Layout&gt;\n  &lt;Footer&gt;footer&lt;/Footer&gt;\n&lt;/Layout&gt;\n</code></pre>\n<h3>Layout</h3>\n<p>布局容器。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>容器 className</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>hasSider</td>\n<td>表示子元素里有 Sider，一般不用指定。可用于服务端渲染时避免样式闪动</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>style</td>\n<td>指定样式</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p><code>Layout.Header</code> <code>Layout.Footer</code> <code>Layout.Content</code> API 与 <code>Layout</code> 相同</p>\n</blockquote>\n<h3>Layout.Sider</h3>\n<p>侧边栏。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>breakpoint</td>\n<td>触发响应式布局的<a href=\"/components/grid-cn/#Col\">断点</a></td>\n<td><code>xs</code> | <code>sm</code> | <code>md</code> | <code>lg</code> | <code>xl</code> | <code>xxl</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>className</td>\n<td>容器 className</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>collapsed</td>\n<td>当前收起状态</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>collapsedWidth</td>\n<td>收缩宽度，设置为 0 会出现特殊 trigger</td>\n<td>number</td>\n<td>80</td>\n</tr>\n<tr>\n<td>collapsible</td>\n<td>是否可收起</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>defaultCollapsed</td>\n<td>是否默认收起</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>reverseArrow</td>\n<td>翻转折叠提示箭头的方向，当 Sider 在右边时可以使用</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>style</td>\n<td>指定样式</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>theme</td>\n<td>主题颜色</td>\n<td><code>light</code> | <code>dark</code></td>\n<td><code>dark</code></td>\n</tr>\n<tr>\n<td>trigger</td>\n<td>自定义 trigger，设置为 null 时隐藏 trigger</td>\n<td>string|ReactNode</td>\n<td>-</td>\n</tr>\n<tr>\n<td>width</td>\n<td>宽度</td>\n<td>number|string</td>\n<td>200</td>\n</tr>\n<tr>\n<td>onCollapse</td>\n<td>展开-收起时的回调函数，有点击 trigger 以及响应式反馈两种方式可以触发</td>\n<td>(collapsed, type) =&gt; {}</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onBreakpoint</td>\n<td>触发响应式布局<a href=\"/components/grid#API\">断点</a>时的回调</td>\n<td>(broken) =&gt; {}</td>\n<td>-</td>\n</tr>\n<tr>\n<td>zeroWidthTriggerStyle</td>\n<td>指定当 <code>collapsedWidth</code> 为 0 时出现的特殊 trigger 的样式</td>\n<td>object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>breakpoint width</h4>\n<pre><code class=\"language-js\">{\n  xs: '480px',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n  xxl: '1600px',\n}\n</code></pre>\n<style>\n  [data-theme=\"dark\"] .site-layout-background {\n    background: #141414;\n  }\n  [data-theme=\"dark\"] .site-layout-header-background {\n    background: #1f1f1f;\n  }\n</style>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/hzEndUVEx/Layout.svg"
  },
  {
    "Title": "Space",
    "SubTitle": "间距",
    "Type": "布局",
    "Desc": "<p>设置组件之间的间距。</p>\n<h2>何时使用</h2>\n<p>避免组件紧贴在一起，拉开统一的空间。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>size</td>\n<td>间距大小</td>\n<td><code>small</code> | <code>middle</code> | <code>large</code> | <code>number</code></td>\n<td><code>small</code></td>\n<td>4.1.0</td>\n</tr>\n<tr>\n<td>direction</td>\n<td>间距方向</td>\n<td><code>vertical</code> | <code>horizontal</code></td>\n<td><code>horizontal</code></td>\n<td>4.1.0</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/wc6%263gJ0Y8/Space.svg"
  },
  {
    "Title": "Affix",
    "SubTitle": "固钉",
    "Type": "导航",
    "Desc": "<p>将页面元素钉在可视范围。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当内容区域比较长，需要滚动页面时，这部分内容对应的操作或者导航需要在滚动范围内始终展现。常用于侧边菜单和按钮组合。</li>\n<li>页面可视范围过小时，慎用此功能以免遮挡页面内容。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>时间轴</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OffsetBottom</td>\n<td>距离窗口底部达到指定偏移量后触发</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OffsetTop</td>\n<td>距离窗口顶部达到指定偏移量后触发</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Target</td>\n<td>设置 Affix 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>固定状态改变时触发的回调函数</td>\n<td>Function()</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>注意：<code>Affix</code> 内的元素不要使用绝对定位，如需要绝对定位的效果，可以直接设置 <code>Affix</code> 为绝对定位：</p>\n<h2>FAQ</h2>\n<p><code>Affix</code> 使用 <code>target</code> 绑定容器时，元素会跑到容器外。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/tX6-md4H6/Affix.svg"
  },
  {
    "Title": "Breadcrumb",
    "SubTitle": "面包屑",
    "Type": "导航",
    "Desc": "<p>显示当前页面在系统层级结构中的位置，并能向上返回。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当系统拥有超过两级以上的层级结构时；</li>\n<li>当需要告知用户『你在哪里』时；</li>\n<li>当需要向上导航的功能时。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Breakcrumb</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ItemRender</td>\n<td>自定义链接函数，和 react-router 配置使用</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Params</td>\n<td>路由的参数</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Routes</td>\n<td>router 的路由栈信息</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Separator</td>\n<td>分隔符自定义</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>BreadcrumbItem</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Href</td>\n<td>链接的目的地</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Overlay</td>\n<td>下拉菜单的内容</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnClick</td>\n<td>单击事件</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>DropdownProps</td>\n<td>弹出下拉菜单的自定义配置</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/9Ltop8JwH/Breadcrumb.svg"
  },
  {
    "Title": "Dropdown",
    "SubTitle": "下拉菜单",
    "Type": "导航",
    "Desc": "<p>向下弹出的列表。</p>\n<h2>何时使用</h2>\n<p>当页面上的操作命令过多时，用此组件可以收纳操作元素。点击或移入触点，会出现一个下拉菜单。可在列表中进行选择，并执行相应的命令。</p>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/eedWN59yJ/Dropdown.svg"
  },
  {
    "Title": "Menu",
    "SubTitle": "导航菜单",
    "Type": "导航",
    "Desc": "<p>为页面和功能提供导航的菜单列表。</p>\n<h2>何时使用</h2>\n<p>导航菜单是一个网站的灵魂，用户依赖导航在各个页面中进行跳转。一般分为顶部导航和侧边导航，顶部导航提供全局性的类目和功能，侧边导航提供多级结构来收纳和排列网站架构。</p>\n<p>更多布局和导航的使用可以参考：<a href=\"/components/layout\">通用布局</a>。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<pre><code class=\"language-jsx\">&lt;Menu&gt;\n  &lt;Menu.Item&gt;菜单项&lt;/Menu.Item&gt;\n  &lt;SubMenu title=&quot;子菜单&quot;&gt;\n    &lt;Menu.Item&gt;子菜单项&lt;/Menu.Item&gt;\n  &lt;/SubMenu&gt;\n&lt;/Menu&gt;\n</code></pre>\n<h3>Menu</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultOpenKeys</td>\n<td>初始展开的 SubMenu 菜单项 key 数组</td>\n<td>string[]</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>defaultSelectedKeys</td>\n<td>初始选中的菜单项 key 数组</td>\n<td>string[]</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>forceSubMenuRender</td>\n<td>在子菜单展示之前就渲染进 DOM</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>inlineCollapsed</td>\n<td>inline 时菜单是否收起状态</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>inlineIndent</td>\n<td>inline 模式的菜单缩进宽度</td>\n<td>number</td>\n<td>24</td>\n<td></td>\n</tr>\n<tr>\n<td>mode</td>\n<td>菜单类型，现在支持垂直、水平、和内嵌模式三种</td>\n<td><code>vertical</code> | <code>horizontal</code> | <code>inline</code></td>\n<td><code>vertical</code></td>\n<td></td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>是否允许多选</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>openKeys</td>\n<td>当前展开的 SubMenu 菜单项 key 数组</td>\n<td>string[]</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>selectable</td>\n<td>是否允许选中</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>selectedKeys</td>\n<td>当前选中的菜单项 key 数组</td>\n<td>string[]</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>style</td>\n<td>根节点样式</td>\n<td>object</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>subMenuCloseDelay</td>\n<td>用户鼠标离开子菜单后关闭延时，单位：秒</td>\n<td>number</td>\n<td>0.1</td>\n<td></td>\n</tr>\n<tr>\n<td>subMenuOpenDelay</td>\n<td>用户鼠标进入子菜单后开启延时，单位：秒</td>\n<td>number</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>theme</td>\n<td>主题颜色</td>\n<td><code>light</code> | <code>dark</code></td>\n<td><code>light</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击 MenuItem 调用此函数</td>\n<td>function({ item, key, keyPath, domEvent })</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onDeselect</td>\n<td>取消选中时调用，仅在 multiple 生效</td>\n<td>function({ item, key, keyPath, selectedKeys, domEvent })</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onOpenChange</td>\n<td>SubMenu 展开/关闭的回调</td>\n<td>function(openKeys: string[])</td>\n<td>noop</td>\n<td></td>\n</tr>\n<tr>\n<td>onSelect</td>\n<td>被选中时调用</td>\n<td>function({ item, key, keyPath, selectedKeys, domEvent })</td>\n<td>无 \u00A0</td>\n<td></td>\n</tr>\n<tr>\n<td>overflowedIndicator</td>\n<td>自定义 Menu 折叠时的图标</td>\n<td>ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>More options in <a href=\"https://github.com/react-component/menu#api\">rc-menu</a></p>\n</blockquote>\n<h3>Menu.Item</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>key</td>\n<td>item 的唯一标志</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>设置收缩时展示的悬浮标题</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Menu.SubMenu</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>popupClassName</td>\n<td>子菜单样式</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>children</td>\n<td>子菜单的菜单项</td>\n<td>Array&lt;MenuItem|SubMenu&gt;</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>key</td>\n<td>唯一标志</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>子菜单项值</td>\n<td>string|ReactNode</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>onTitleClick</td>\n<td>点击子菜单标题</td>\n<td>function({ key, domEvent })</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Menu.ItemGroup</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>分组的菜单项</td>\n<td>MenuItem[]</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>分组标题</td>\n<td>string|ReactNode</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Menu.Divider</h3>\n<p>菜单项分割线，只用在弹出菜单内。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/3XZcjGpvK/Menu.svg"
  },
  {
    "Title": "PageHeader",
    "SubTitle": "页头",
    "Type": "导航",
    "Desc": "<p>页头位于页容器中，页容器顶部，起到了内容概览和引导页级操作的作用。包括由面包屑、标题、页面内容简介、页面级操作等、页面级导航组成。</p>\n<h2>何时使用</h2>\n<p>当需要使用户快速理解当前页是什么以及方便用户使用页面功能时使用，通常也可被用作页面间导航。</p>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/6bKE0Cq0R/PageHeader.svg"
  },
  {
    "Title": "Pagination",
    "SubTitle": "分页",
    "Type": "导航",
    "Desc": "<p>采用分页的形式分隔长列表，每次只加载一个页面。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当加载/渲染所有数据将花费很多时间时；</li>\n<li>可切换页码浏览数据。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<pre><code class=\"language-jsx\">&lt;Pagination onChange={onChange} total={50} /&gt;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Current</td>\n<td>当前页数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultCurrent</td>\n<td>默认的当前页数</td>\n<td>number</td>\n<td>1</td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultPageSize</td>\n<td>默认的每页条数</td>\n<td>number</td>\n<td>10</td>\n<td></td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用分页</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>HideOnSinglePage</td>\n<td>只有一页时是否隐藏分页器</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>ItemRender</td>\n<td>用于自定义页码的结构，可用于优化 SEO</td>\n<td>(page, type: 'page' | 'prev' | 'next', originalElement) =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>PageSize</td>\n<td>每页条数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>PageSizeOptions</td>\n<td>指定每页可以显示多少条</td>\n<td>string[]</td>\n<td>['10', '20', '50', '100']</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowLessItems</td>\n<td>是否显示较少页面内容</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowQuickJumper</td>\n<td>是否可以快速跳转至某页</td>\n<td>boolean | <code>{ goButton: ReactNode }</code></td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowSizeChanger</td>\n<td>是否展示 <code>pageSize</code> 切换器，当 <code>total</code> 大于 <code>50</code> 时默认为 <code>true</code></td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowTitle</td>\n<td>是否显示原生 tooltip 页码提示</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowTotal</td>\n<td>用于显示数据总量和当前数据顺序</td>\n<td>Function(total, range)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Simple</td>\n<td>当添加该属性时，显示为简单分页</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Size</td>\n<td>当为「small」时，是小尺寸分页</td>\n<td>'default' | 'small'</td>\n<td>&quot;&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>Responsive</td>\n<td>当 size 未指定时，根据屏幕宽度自动调整尺寸</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Total</td>\n<td>数据总数</td>\n<td>number</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>页码改变的回调，参数是改变后的页码及每页条数</td>\n<td>Function(page, pageSize)</td>\n<td>noop</td>\n<td></td>\n</tr>\n<tr>\n<td>OnShowSizeChange</td>\n<td>pageSize 变化的回调</td>\n<td>Function(current, size)</td>\n<td>noop</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/1vqv2bj68/Pagination.svg"
  },
  {
    "Title": "Steps",
    "SubTitle": "步骤条",
    "Type": "导航",
    "Desc": "<p>引导用户按照流程完成任务的导航条。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当任务复杂或者存在先后关系时，将其分解成一系列步骤，从而简化任务。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Steps\nThe whole of the step bar.</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ClassName</td>\n<td>步骤条类名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>步骤条类型，有: <code>default</code>, <code>navigation</code></td>\n<td>string</td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>Current</td>\n<td>指定当前步骤，从 0 开始记数。在子 Step 元素中，可以通过 status 属性覆盖状态</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Direction</td>\n<td>指定步骤条方向。目前支持水平和竖直两种方向 <code>horizontal</code> or <code>vertical</code></td>\n<td>string</td>\n<td><code>horizontal</code></td>\n</tr>\n<tr>\n<td>LabelPlacement</td>\n<td>指定标签放置位置，默认水平放图标右侧，可选 <code>vertical</code> 放图标下方</td>\n<td>string</td>\n<td><code>horizontal</code></td>\n</tr>\n<tr>\n<td>ProgressDot</td>\n<td>点状步骤条，可以设置为一个 function，labelPlacement 将强制为 <code>vertical</code></td>\n<td>string</td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>Size</td>\n<td>指定大小，目前支持普通（default）和迷你（small）</td>\n<td>string</td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>Status</td>\n<td>指定当前步骤的状态，可选 <code>wait</code> <code>process</code> <code>finish</code> <code>error</code></td>\n<td>string</td>\n<td><code>process</code></td>\n</tr>\n<tr>\n<td>Initial</td>\n<td>起始序号，从 0 开始记数</td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>点击切换步骤时触发</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Steps.Step\nA single step in the step bar.</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Description</td>\n<td>步骤的详情描述，可选</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Icon</td>\n<td>步骤图标的类型，可选</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Status</td>\n<td>指定状态。当不配置该属性时，会使用 Steps 的 current 来自动指定状态。可选： <code>wait</code> <code>process</code> <code>finish</code> <code>error</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Title</td>\n<td>标题</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>SubTitle</td>\n<td>子标题</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用点击</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/UZYqMizXHaj/Steps.svg"
  },
  {
    "Title": "AutoComplete",
    "SubTitle": "自动完成",
    "Type": "数据录入",
    "Desc": "<p>输入框自动完成功能。</p>\n<h2>何时使用</h2>\n<p>需要自动完成时。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>allowClear</td>\n<td>支持清除, 单选模式有效</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>autoFocus</td>\n<td>自动获取焦点</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>backfill</td>\n<td>使用键盘选择选项的时候把选中项回填到输入框中</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>children (自定义输入框)</td>\n<td>自定义输入框</td>\n<td>HTMLInputElement <br /><br /> HTMLTextAreaElement <br /><br /> <code>React.ReactElement&lt;InputProps&gt;</code></td>\n<td><code>&lt;Input /&gt;</code></td>\n<td></td>\n</tr>\n<tr>\n<td>children (自动完成的数据源)</td>\n<td>自动完成的数据源</td>\n<td><code>React.ReactElement&lt;OptionProps&gt;</code> <br /><br /> <code>Array&lt;React.ReactElement&lt;OptionProps&gt;&gt;</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultActiveFirstOption</td>\n<td>是否默认高亮第一个选项。</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>指定默认选中的条目</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>filterOption</td>\n<td>是否根据输入项进行筛选。当其为一个函数时，会接收 <code>inputValue</code> <code>option</code> 两个参数，当 <code>option</code> 符合筛选条件时，应返回 <code>true</code>，反之则返回 <code>false</code>。</td>\n<td>boolean or function(inputValue, option)</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>getPopupContainer</td>\n<td>菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。<a href=\"https://codesandbox.io/s/4j168r7jw0\">示例</a></td>\n<td>Function(triggerNode)</td>\n<td>() =&gt; document.body</td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>输入框提示</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>指定当前选中的条目</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onBlur</td>\n<td>失去焦点时的回调</td>\n<td>function()</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>选中 option，或 input 的 value 变化时，调用此函数</td>\n<td>function(value)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onFocus</td>\n<td>获得焦点时的回调</td>\n<td>function()</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onSearch</td>\n<td>搜索补全项的时候调用</td>\n<td>function(value)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onSelect</td>\n<td>被选中时调用，参数为选中项的 value 值</td>\n<td>function(value, option)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultOpen</td>\n<td>是否默认展开下拉菜单</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>open</td>\n<td>是否展开下拉菜单</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onDropdownVisibleChange</td>\n<td>展开下拉菜单的回调</td>\n<td>function(open)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>notFoundContent</td>\n<td>当下拉列表为空时显示的内容</td>\n<td>ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>方法</h2>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>blur()</td>\n<td>移除焦点</td>\n<td></td>\n</tr>\n<tr>\n<td>focus()</td>\n<td>获取焦点</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/qtJm4yt45/AutoComplete.svg"
  },
  {
    "Title": "Cascader",
    "SubTitle": "级联选择",
    "Type": "数据录入",
    "Desc": "<p>级联选择框。</p>\n<h2>何时使用</h2>\n<ul>\n<li>需要从一组相关联的数据集合进行选择，例如省市区，公司层级，事物分类等。</li>\n<li>从一个较大的数据集合中进行选择时，用多级分类进行分隔，方便选择。</li>\n<li>比起 Select 组件，可以在同一个浮层中完成选择，有较好的体验。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Cascader</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AllowClear</td>\n<td>是否支持清除</td>\n<td>bool</td>\n<td>true</td>\n</tr>\n<tr>\n<td>ChangeOnSelect</td>\n<td>当此项为 true 时，点选每级菜单选项值都会发生变化</td>\n<td>bool</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>自定义类名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>DefaultValue</td>\n<td>默认的选中项</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>ExpandTrigger</td>\n<td>次级菜单的展开方式，可选 'click' 和 'hover'</td>\n<td>string</td>\n<td>'click'</td>\n</tr>\n<tr>\n<td>Options</td>\n<td>可选项数据源</td>\n<td>IList<AntCheckbox></td>\n<td>-</td>\n</tr>\n<tr>\n<td>Placeholder</td>\n<td>输入框占位文本</td>\n<td>string</td>\n<td>'请选择'</td>\n</tr>\n<tr>\n<td>Size</td>\n<td>输入框大小，可选 'large','middle' 'small'</td>\n<td>string</td>\n<td>无</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>选择完成后的回调 (List<CascaderNode>, string, string) =&gt; void</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>CascaderNode</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Label</td>\n<td>节点名称</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value</td>\n<td>节点值</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>节点是否禁用</td>\n<td>bool</td>\n<td>false</td>\n</tr>\n<tr>\n<td>HasChildren</td>\n<td>是否存在子节点(只读)</td>\n<td>bool</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Children</td>\n<td>子节点</td>\n<td>AntCheckbox[]</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/UdS8y8xyZ/Cascader.svg"
  },
  {
    "Title": "Checkbox",
    "SubTitle": "多选框",
    "Type": "数据录入",
    "Desc": "<p>多选框。</p>\n<h2>何时使用</h2>\n<ul>\n<li>在一组可选项中进行多项选择时；</li>\n<li>单独使用可以表示两种状态之间的切换，和 switch 类似。区别在于切换 switch 会直接触发状态改变，而 checkbox 一般用于状态标记，需要和提交操作配合。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Checkbox</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AutoFocus</td>\n<td>自动获取焦点</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Checked</td>\n<td>指定当前是否选中</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>失效状态</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Indeterminate</td>\n<td>设置 indeterminate 状态，只负责样式控制</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>CheckedChange</td>\n<td>变化时回调函数</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Checkbox Group</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CheckboxItems</td>\n<td>自动获取焦点</td>\n<td>IList<AntCheckbox></td>\n<td>-</td>\n</tr>\n<tr>\n<td>Disable</td>\n<td>整组失效</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Options</td>\n<td>指定可选项</td>\n<td>CheckboxOption[]</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value</td>\n<td>选中组的值列表</td>\n<td>IList<string></td>\n<td>Array.Empty<string>()</td>\n</tr>\n<tr>\n<td>ValueChanged</td>\n<td>变化时回调函数</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/8nbVbHEm_/CheckBox.svg"
  },
  {
    "Title": "DatePicker",
    "SubTitle": "日期选择框",
    "Type": "数据录入",
    "Desc": "<p>输入或选择日期的控件。</p>\n<h2>何时使用</h2>\n<p>当用户需要输入一个日期，可以点击标准输入框，弹出日期面板进行选择。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<p>日期类组件包括以下六种形式。</p>\n<ul>\n<li>DatePicker</li>\n<li>MonthPicker</li>\n<li>RangePicker</li>\n<li>WeekPicker</li>\n<li>YearPicker</li>\n<li>QuarterPicker (4.1.0 新增)</li>\n</ul>\n<h3>国际化配置</h3>\n<p>使用 System.Globalization.CultureInfo 属性为 DatePicker 配置国际化选项。暂时只提供 en-US 和 zh-CN 两种内置方案。</p>\n<h3>共同的 API</h3>\n<p>以下 API 为 DatePicker、YearPicker、MonthPicker、RangePicker, WeekPicker 共享的 API。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>allowClear（TODO）</td>\n<td>是否显示清除按钮</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>autoFocus</td>\n<td>自动获取焦点</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>className</td>\n<td>选择器 className</td>\n<td>string</td>\n<td>''</td>\n<td></td>\n</tr>\n<tr>\n<td>dateRender</td>\n<td>自定义日期单元格的内容</td>\n<td>function(currentDate: moment, today: moment) =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>禁用</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>disabledDate</td>\n<td>不可选择的日期</td>\n<td>(currentDate: moment) =&gt; boolean</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>dropdownClassName</td>\n<td>额外的弹出日历 className</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>getPopupContainer</td>\n<td>定义浮层的容器，默认为 body 上新建 div</td>\n<td>function(trigger)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>locale（TODO）</td>\n<td>国际化配置</td>\n<td>object</td>\n<td><a href=\"https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json\">默认配置</a></td>\n<td></td>\n</tr>\n<tr>\n<td>mode（TODO）</td>\n<td>日期面板的状态（<a href=\"/docs/react/faq#%E5%BD%93%E6%88%91%E6%8C%87%E5%AE%9A%E4%BA%86-DatePicker/RangePicker-%E7%9A%84-mode-%E5%B1%9E%E6%80%A7%E5%90%8E%EF%BC%8C%E7%82%B9%E5%87%BB%E5%90%8E%E6%97%A0%E6%B3%95%E9%80%89%E6%8B%A9%E5%B9%B4%E4%BB%BD/%E6%9C%88%E4%BB%BD%EF%BC%9F\">设置后无法选择年份/月份？</a>）</td>\n<td><code>time</code> | <code>date</code> | <code>month</code> | <code>year</code> | <code>decade</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>open</td>\n<td>控制弹层是否展开</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>picker</td>\n<td>设置选择器类型</td>\n<td><code>date</code> | <code>week</code> | <code>month</code> | <code>quarter</code> (4.1.0) | <code>year</code></td>\n<td><code>date</code></td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>输入框提示文字</td>\n<td>string|RangePicker[]</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>popupStyle</td>\n<td>额外的弹出日历样式</td>\n<td>CSSProperties</td>\n<td>{}</td>\n<td></td>\n</tr>\n<tr>\n<td>size</td>\n<td>输入框大小，<code>large</code> 高度为 40px，<code>small</code> 为 24px，默认是 32px</td>\n<td><code>large</code> | <code>middle</code> | <code>small</code></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>bordered</td>\n<td>是否有边框</td>\n<td>Boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>suffixIcon</td>\n<td>自定义的选择框后缀图标</td>\n<td>ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>style</td>\n<td>自定义输入框样式</td>\n<td>CSSProperties</td>\n<td>{}</td>\n<td></td>\n</tr>\n<tr>\n<td>onOpenChange</td>\n<td>弹出日历和关闭日历的回调</td>\n<td>function(open)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onPanelChange</td>\n<td>日历面板切换的回调</td>\n<td>function(value, mode)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>inputReadOnly</td>\n<td>设置输入框为只读（避免在移动设备上打开虚拟键盘）</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>共同的方法</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>blur()</td>\n<td>移除焦点</td>\n<td></td>\n</tr>\n<tr>\n<td>focus()</td>\n<td>获取焦点</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>DatePicker</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>默认日期，如果开始时间或结束时间为 <code>null</code> 或者 <code>undefined</code>，日期范围将是一个开区间</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultPickerValue</td>\n<td>默认面板日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>disabledTime</td>\n<td>不可选择的时间</td>\n<td>function(date)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>设置日期格式，为数组时支持多格式匹配，展示以第一个为准。配置参考 <a href=\"http://momentjs.com/\">moment.js</a></td>\n<td>string | string[]</td>\n<td>&quot;YYYY-MM-DD&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>renderExtraFooter</td>\n<td>在面板中添加额外的页脚</td>\n<td>(mode) =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>showTime</td>\n<td>增加时间选择功能</td>\n<td>Object|boolean</td>\n<td><a href=\"/components/time-picker/#API\">TimePicker Options</a></td>\n<td></td>\n</tr>\n<tr>\n<td>showTime.defaultValue（TODO）</td>\n<td>设置用户选择日期时默认的时分秒，<a href=\"#components-date-picker-demo-disabled-date\">例子</a></td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>moment()</td>\n<td></td>\n</tr>\n<tr>\n<td>showToday</td>\n<td>是否展示“今天”按钮</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>时间发生变化的回调</td>\n<td>function(date: moment, dateString: string)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onOk（TODO）</td>\n<td>点击确定按钮的回调</td>\n<td>function()</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onPanelChange</td>\n<td>日期面板变化时的回调</td>\n<td>function(value, mode)</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>YearPicker</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>默认日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultPickerValue</td>\n<td>默认面板日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>展示的日期格式，配置参考 <a href=\"http://momentjs.com/\">moment.js</a></td>\n<td>string</td>\n<td>&quot;YYYY&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>renderExtraFooter</td>\n<td>在面板中添加额外的页脚</td>\n<td>() =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>时间发生变化的回调，发生在用户选择时间时</td>\n<td>function(date: moment, dateString: string)</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>QuarterPicker</h3>\n<p><code>4.1.0</code> 新增。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>默认日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultPickerValue</td>\n<td>默认面板日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>展示的日期格式，配置参考 <a href=\"http://momentjs.com/\">moment.js</a></td>\n<td>string</td>\n<td>&quot;YYYY-\\QQ&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>renderExtraFooter</td>\n<td>在面板中添加额外的页脚</td>\n<td>() =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>时间发生变化的回调，发生在用户选择时间时</td>\n<td>function(date: moment, dateString: string)</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>MonthPicker</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>默认日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultPickerValue</td>\n<td>默认面板日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>展示的日期格式，配置参考 <a href=\"http://momentjs.com/\">moment.js</a></td>\n<td>string</td>\n<td>&quot;YYYY-MM&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>monthCellRender</td>\n<td>自定义的月份内容渲染方法</td>\n<td>function(date, locale): ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>renderExtraFooter</td>\n<td>在面板中添加额外的页脚</td>\n<td>() =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>时间发生变化的回调，发生在用户选择时间时</td>\n<td>function(date: moment, dateString: string)</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>WeekPicker</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>默认日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultPickerValue</td>\n<td>默认面板日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>展示的日期格式，配置参考 <a href=\"http://momentjs.com/\">moment.js</a></td>\n<td>string</td>\n<td>&quot;YYYY-wo&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>时间发生变化的回调，发生在用户选择时间时</td>\n<td>function(date: moment, dateString: string)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>renderExtraFooter</td>\n<td>在面板中添加额外的页脚</td>\n<td>(mode) =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>RangePicker</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>allowEmpty（TODO）</td>\n<td>允许起始项部分为空</td>\n<td>[boolean, boolean]</td>\n<td>[false, false]</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>默认日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a>[]</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultPickerValue</td>\n<td>默认面板日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a>[]</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>禁用起始项</td>\n<td><code>[boolean, boolean]</code></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>disabledTime</td>\n<td>不可选择的时间</td>\n<td>function(dates: [moment, moment], partial: <code>'start'|'end'</code>)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>展示的日期格式</td>\n<td>string</td>\n<td>&quot;YYYY-MM-DD HH:mm:ss&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>ranges（TODO）</td>\n<td>预设时间范围快捷选择</td>\n<td>{ [range: string]: <a href=\"http://momentjs.com/\">moment</a>[] } | { [range: string]: () =&gt; <a href=\"http://momentjs.com/\">moment</a>[] }</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>renderExtraFooter</td>\n<td>在面板中添加额外的页脚</td>\n<td>() =&gt; React.ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>separator（TODO）</td>\n<td>设置分隔符</td>\n<td>string</td>\n<td>'~'</td>\n<td></td>\n</tr>\n<tr>\n<td>showTime</td>\n<td>增加时间选择功能</td>\n<td>Object|boolean</td>\n<td><a href=\"/components/time-picker/#API\">TimePicker Options</a></td>\n<td></td>\n</tr>\n<tr>\n<td>showTime.defaultValue</td>\n<td>设置用户选择日期时默认的时分秒，<a href=\"#components-date-picker-demo-disabled-date\">例子</a></td>\n<td><a href=\"http://momentjs.com/\">moment</a>[]</td>\n<td>[moment(), moment()]</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>日期</td>\n<td><a href=\"http://momentjs.com/\">moment</a>[]</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onCalendarChange（TODO）</td>\n<td>待选日期发生变化的回调</td>\n<td>function(dates: [moment, moment], dateStrings: [string, string])</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>日期范围发生变化的回调</td>\n<td>function(dates: [moment, moment], dateStrings: [string, string])</td>\n<td>无</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<style>\n.code-box-demo .ant-picker {\n  margin: 0 8px 12px 0;\n}\n</style>\n<h2>FAQ</h2>\n<ul>\n<li><p><a href=\"/docs/react/faq#%E5%BD%93%E6%88%91%E6%8C%87%E5%AE%9A%E4%BA%86-DatePicker/RangePicker-%E7%9A%84-mode-%E5%B1%9E%E6%80%A7%E5%90%8E%EF%BC%8C%E7%82%B9%E5%87%BB%E5%90%8E%E6%97%A0%E6%B3%95%E9%80%89%E6%8B%A9%E5%B9%B4%E4%BB%BD/%E6%9C%88%E4%BB%BD%EF%BC%9F\">当我指定了 DatePicker/RangePicker 的 mode 属性后，点击后无法选择年份/月份？</a></p>\n</li>\n<li><p><a href=\"/docs/react/replace-moment#DatePicker\">如何在 DatePicker 中使用自定义日期库（如 dayjs ）</a></p>\n</li>\n</ul>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/RT_USzA48/DatePicker.svg"
  },
  {
    "Title": "Form",
    "SubTitle": "表单",
    "Type": "数据录入",
    "Desc": "<p>高性能表单控件，自带数据域管理。包含数据录入、校验以及对应样式。</p>\n<h2>何时使用</h2>\n<ul>\n<li>用于创建一个实体或收集信息。</li>\n<li>需要对输入的数据类型进行校验时。</li>\n</ul>\n<h2>API(TODO)</h2>\n<style>\n.code-box-demo .ant-form:not(.ant-form-inline):not(.ant-form-vertical) {\n  max-width: 600px;\n}\n.markdown.api-container table td:nth-of-type(4) {\n  white-space: nowrap;\n  word-wrap: break-word;\n}\n</style>\n<style>\n  .site-form-item-icon {\n    color: rgba(0, 0, 0, 0.25);\n  }\n  [data-theme=\"dark\"] .site-form-item-icon {\n    color: rgba(255,255,255,.3);\n  }\n</style>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/ORmcdeaoO/Form.svg"
  },
  {
    "Title": "Input",
    "SubTitle": "输入框",
    "Type": "数据录入",
    "Desc": "<p>通过鼠标或键盘输入内容，是最基础的表单域的包装。</p>\n<h2>何时使用</h2>\n<ul>\n<li>需要用户输入表单域内容时。</li>\n<li>提供组合型输入框，带搜索的输入框，还可以进行大小选择。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AddOnBefore</td>\n<td>带标签的 input，设置前置标签</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>AddOnAfter</td>\n<td>带标签的 input，设置后置标签</td>\n<td>RenderFragment</td>\n<td></td>\n</tr>\n<tr>\n<td>ChildContent</td>\n<td>子组件</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Size</td>\n<td>抽屉元素之间的子组件  <code>default</code>, <code>large</code>, <code>small</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Placeholder</td>\n<td>提供可描述输入字段预期值的提示信息</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>DefaultValue</td>\n<td>输入框默认内容</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>MaxLength</td>\n<td>最大长度</td>\n<td>int</td>\n<td></td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>是否禁用状态，默认为 false</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>AllowClear</td>\n<td>可以点击清除图标删除内容</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Prefix</td>\n<td>带有前缀图标的 input</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Suffix</td>\n<td>带有后缀图标的 input</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>声明 input 类型，同原生 input 标签的 type 属性，见：MDN(请直接使用 Input.TextArea 代替 type=&quot;textarea&quot;)。</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>输入框内容变化时的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnPressEnter</td>\n<td>按下回车的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnInput</td>\n<td>输入时的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/xS9YEJhfe/Input.svg"
  },
  {
    "Title": "InputNumber",
    "SubTitle": "数字输入框",
    "Type": "数据录入",
    "Desc": "<p>通过鼠标或键盘，输入范围内的数值。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当需要获取标准数值时。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AutoFocus</td>\n<td>自动获取焦点</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>DefaultValue</td>\n<td>初始值</td>\n<td>number</td>\n<td></td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Formatter</td>\n<td>指定输入框展示值的格式</td>\n<td>function(double,string)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Max</td>\n<td>最大值</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Min</td>\n<td>最小值</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Parser</td>\n<td>指定从 <code>formatter</code> 里转换回数字的方式，和 <code>formatter</code> 搭配使用</td>\n<td>function(string, double)</td>\n<td></td>\n</tr>\n<tr>\n<td>Size</td>\n<td>输入框大小</td>\n<td><code>large</code> ,<code>middle</code>,<code>small</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>Step</td>\n<td>每次改变步数，可以为小数</td>\n<td>double</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value</td>\n<td>当前值</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>ValueChanged</td>\n<td>输入框内容变化时的回调</td>\n<td>function(double)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/XOS8qZ0kU/InputNumber.svg"
  },
  {
    "Title": "Mentions",
    "SubTitle": "提及",
    "Type": "数据录入",
    "Desc": "<p>提及组件。</p>\n<h2>何时使用</h2>\n<p>用于在输入中提及某人或某事，常用于发布、聊天或评论功能。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Mentions</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>autoFocus</td>\n<td>自动获得焦点</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>默认值</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>filterOption</td>\n<td>自定义过滤逻辑</td>\n<td>false | (input: string, option: OptionProps) =&gt; boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>notFoundContent</td>\n<td>当下拉列表为空时显示的内容</td>\n<td>ReactNode</td>\n<td>'Not Found'</td>\n</tr>\n<tr>\n<td>placement</td>\n<td>弹出层展示位置</td>\n<td><code>top</code> | <code>bottom</code></td>\n<td><code>bottom</code></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>设置触发关键字</td>\n<td>string | string[]</td>\n<td>'@'</td>\n</tr>\n<tr>\n<td>split</td>\n<td>设置选中项前后分隔符</td>\n<td>string</td>\n<td>' '</td>\n</tr>\n<tr>\n<td>validateSearch</td>\n<td>自定义触发验证逻辑</td>\n<td>(text: string, props: MentionsProps) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>设置值</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>值改变时触发</td>\n<td>(text: string) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>onSelect</td>\n<td>选择选项时触发</td>\n<td>(option: OptionProps, prefix: string) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>onSearch</td>\n<td>搜索时触发</td>\n<td>(text: string, prefix: string) =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>onFocus</td>\n<td>获得焦点时触发</td>\n<td>() =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>onBlur</td>\n<td>失去焦点时触发</td>\n<td>() =&gt; void</td>\n<td></td>\n</tr>\n<tr>\n<td>getPopupContainer</td>\n<td>指定建议框挂载的 HTML 节点</td>\n<td>() =&gt; HTMLElement</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Mentions 方法</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>blur()</td>\n<td>移除焦点</td>\n</tr>\n<tr>\n<td>focus()</td>\n<td>获取焦点</td>\n</tr>\n</tbody>\n</table>\n<h3>Option</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>children</td>\n<td>选项内容</td>\n<td>ReactNode</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>选择时填充的值</td>\n<td>string</td>\n<td>''</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/jPE-itMFM/Mentions.svg"
  },
  {
    "Title": "Radio",
    "SubTitle": "单选框",
    "Type": "数据录入",
    "Desc": "<p>单选框。</p>\n<h2>何时使用</h2>\n<p>-用于在多个备选项中选中单个状态。\n-和 <code>Select</code> 的区别是，<code>Radio</code> 所有选项默认可见，方便用户在比较中选择，因此选项不宜过多。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Radio/Radio.Button</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AutoFocus</td>\n<td>自动获取焦点</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Checked</td>\n<td>指定当前是否选中</td>\n<td>boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultChecked</td>\n<td>初始是否选中</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁用 Radio</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value</td>\n<td>根据 value 进行比较，判断是否选中</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>RadioGroup</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ButtonStyle</td>\n<td>RadioButton 的风格样式，目前有描边和填色两种风格</td>\n<td><code>outline</code>,<code>solid</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>禁选所有子单选器</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Value</td>\n<td>用于设置当前选中的值</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Name</td>\n<td>RadioGroup 下所有 input[type=&quot;radio&quot;] 的 name 属性</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Size</td>\n<td>大小，只对按钮样式生效</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>选项变化时的回调函数</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/8cYb5seNB/Radio.svg"
  },
  {
    "Title": "Rate",
    "SubTitle": "评分",
    "Type": "数据录入",
    "Desc": "<p>评分组件。</p>\n<h2>何时使用</h2>\n<ul>\n<li>对评价进行展示。</li>\n<li>对事物进行快速的评级操作。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AllowClear</td>\n<td>是否允许再次点击后清除</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>AllowHalf</td>\n<td>是否允许半选</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>AutoFocus</td>\n<td>自动获取焦点</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Character</td>\n<td>自定义字符</td>\n<td>ReactNode</td>\n<td><a href=\"/components/icon-cn/\">&lt;StarFilled /&gt;</a></td>\n</tr>\n<tr>\n<td>ClassName</td>\n<td>自定义样式类名</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>Count</td>\n<td>star 总数</td>\n<td>int</td>\n<td>5</td>\n</tr>\n<tr>\n<td>DefaultValue</td>\n<td>默认值</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>只读，无法进行交互</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>自定义样式对象</td>\n<td>CSSProperties</td>\n<td></td>\n</tr>\n<tr>\n<td>Tooltips</td>\n<td>自定义每项的提示信息</td>\n<td>string[]</td>\n<td></td>\n</tr>\n<tr>\n<td>Value</td>\n<td>当前数，受控值</td>\n<td>number</td>\n<td></td>\n</tr>\n<tr>\n<td>OnBlur</td>\n<td>失去焦点时的回调</td>\n<td>Function()</td>\n<td></td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>选择时的回调</td>\n<td>Function(value: number)</td>\n<td></td>\n</tr>\n<tr>\n<td>OnFocus</td>\n<td>获取焦点时的回调</td>\n<td>Function()</td>\n<td></td>\n</tr>\n<tr>\n<td>OnHoverChange</td>\n<td>鼠标经过时数值变化的回调</td>\n<td>Function(value: number)</td>\n<td></td>\n</tr>\n<tr>\n<td>OnKeyDown</td>\n<td>按键回调</td>\n<td>Function(event)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>方法</h2>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>blur()</td>\n<td>移除焦点</td>\n</tr>\n<tr>\n<td>focus()</td>\n<td>获取焦点</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/R5uiIWmxe/Rate.svg"
  },
  {
    "Title": "Select",
    "SubTitle": "选择器",
    "Type": "数据录入",
    "Desc": "<p>下拉选择器。</p>\n<h2>何时使用</h2>\n<ul>\n<li>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。</li>\n<li>当选项少时（少于 5 项），建议直接将选项平铺，使用 <a href=\"/components/radio/\">Radio</a> 是更好的选择。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<pre><code class=\"language-razor\">&lt;Select&gt;\n  &lt;SelectOption Value=&quot;lucy&quot;&gt;lucy&lt;/SelectOption&gt;\n&lt;/Select&gt;\n</code></pre>\n<h3>Select props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AllowClear</td>\n<td>支持清除</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>AutoClearSearchValue</td>\n<td>是否在选中项后清空搜索框，只在 <code>mode</code> 为 <code>multiple</code> 或 <code>tags</code> 时有效。</td>\n<td>Boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>AutoFocus</td>\n<td>默认获取焦点</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultActiveFirstOption</td>\n<td>是否默认高亮第一个选项。</td>\n<td>Boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultValue</td>\n<td>指定默认选中的条目</td>\n<td>string|IEnumerable&lt;string&gt;<br />LabeledValue|IEnumerable&lt;LabeledValue&gt;</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>是否禁用</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>DropdownClassName</td>\n<td>下拉菜单的 className 属性</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>DropdownMatchSelectWidth</td>\n<td>下拉菜单和选择器同宽。默认将设置 <code>min-width</code>。<code>false</code> 时会关闭虚拟滚动</td>\n<td>Boolean | number</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>DropdownRender</td>\n<td>自定义下拉框内容</td>\n<td>(menuNode: RenderFragment, props:Properties) =&gt; RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>DropdownStyle</td>\n<td>下拉菜单的 style 属性</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>FilterOption</td>\n<td>是否根据输入项进行筛选。当其为一个函数时，会接收 <code>inputValue</code> <code>option</code> 两个参数，当 <code>option</code> 符合筛选条件时，应返回 <code>true</code>，反之则返回 <code>false</code>。</td>\n<td>Boolean or function(inputValue, option)</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>GetPopupContainer</td>\n<td>菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。<a href=\"https://codesandbox.io/s/4j168r7jw0\">示例</a></td>\n<td>Function(triggerNode)</td>\n<td>() =&gt; document.body</td>\n<td></td>\n</tr>\n<tr>\n<td>LabelInValue</td>\n<td>是否把每个选项的 label 包装到 value 中，会把 Select 的 value 类型从 <code>string</code> 变为 <code>{key: string, label: RenderFragment}</code> 的格式</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>ListHeight</td>\n<td>设置弹窗滚动高度</td>\n<td>number</td>\n<td>256</td>\n<td></td>\n</tr>\n<tr>\n<td>MaxTagCount</td>\n<td>最多显示多少个 tag</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>MaxTagTextLength</td>\n<td>最大显示的 tag 文本长度</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>MaxTagPlaceholder</td>\n<td>隐藏 tag 时显示的内容</td>\n<td>RenderFragment/function(omittedValues)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>TagRender</td>\n<td>自定义 tag 内容 render</td>\n<td>(props:Properties) =&gt; RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Mode</td>\n<td>设置 Select 的模式为多选或标签</td>\n<td><code>multiple</code> | <code>tags</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>NotFoundContent</td>\n<td>当下拉列表为空时显示的内容</td>\n<td>RenderFragment</td>\n<td>'Not Found'</td>\n<td></td>\n</tr>\n<tr>\n<td>OptionFilterProp</td>\n<td>搜索时过滤对应的 option 属性，如设置为 children 表示对内嵌内容进行搜索。<a href=\"https://codesandbox.io/s/antd-reproduction-template-tk678\">示例</a></td>\n<td>string</td>\n<td>value</td>\n<td></td>\n</tr>\n<tr>\n<td>OptionLabelProp</td>\n<td>回填到选择框的 SelectOption 的属性值，默认是 SelectOption 的子元素。比如在子元素需要高亮效果时，此值可以设为 <code>value</code>。</td>\n<td>string</td>\n<td><code>children</code> （combobox 模式下为 <code>value</code>）</td>\n<td></td>\n</tr>\n<tr>\n<td>Placeholder</td>\n<td>选择框默认文字</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowArrow</td>\n<td>是否显示下拉小箭头</td>\n<td>Boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowSearch</td>\n<td>使单选模式可搜索</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>Size</td>\n<td>选择框大小</td>\n<td><code>large</code> | <code>middle</code> | <code>small</code></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>SuffixIcon</td>\n<td>自定义的选择框后缀图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>RemoveIcon</td>\n<td>自定义的多选框清除图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>ClearIcon</td>\n<td>自定义的多选框清空图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>MenuItemSelectedIcon</td>\n<td>自定义多选时当前选中的条目图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>TokenSeparators</td>\n<td>在 tags 和 multiple 模式下自动分词的分隔符</td>\n<td>IEnumerable&lt;string&gt;</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Value</td>\n<td>指定当前选中的条目</td>\n<td>string|IEnumerable&lt;string&gt;<br />LabeledValue|IEnumerable&lt;LabeledValue&gt;</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>virtual</td>\n<td>设置 <code>false</code> 时关闭虚拟滚动</td>\n<td>Boolean</td>\n<td>true</td>\n<td>4.1.0</td>\n</tr>\n<tr>\n<td>OnBlur</td>\n<td>失去焦点时回调</td>\n<td>function</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>选中 option，或 input 的 value 变化（combobox 模式下）时，调用此函数</td>\n<td>function(value, option:SelectOption/IEnumerable&lt;SelectOption&gt;)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnDeselect</td>\n<td>取消选中时调用，参数为选中项的 value (或 key) 值，仅在 multiple 或 tags 模式下生效</td>\n<td>function(string|number|LabeledValue)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnFocus</td>\n<td>获得焦点时回调</td>\n<td>function</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnInputKeyDown</td>\n<td>按键按下时回调</td>\n<td>function</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnMouseEnter</td>\n<td>鼠标移入时回调</td>\n<td>function</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnMouseLeave</td>\n<td>鼠标移出时回调</td>\n<td>function</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnPopupScroll</td>\n<td>下拉列表滚动时的回调</td>\n<td>function</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnSearch</td>\n<td>文本框值变化时回调</td>\n<td>function(value: string)</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OnSelect</td>\n<td>被选中时调用，参数为选中项的 value (或 key) 值</td>\n<td>function(string |LabeledValue, option:SelectOption)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultOpen</td>\n<td>是否默认展开下拉菜单</td>\n<td>Boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Open</td>\n<td>是否展开下拉菜单</td>\n<td>Boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnDropdownVisibleChange</td>\n<td>展开下拉菜单的回调</td>\n<td>function(open)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Loading</td>\n<td>加载中状态</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>Bordered</td>\n<td>是否有边框</td>\n<td>Boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意，如果发现下拉菜单跟随页面滚动，或者需要在其他弹层中触发 Select，请尝试使用 <code>GetPopupContainer={triggerNode =&gt; triggerNode.parentElement}</code> 将下拉弹层渲染节点固定在触发器的父元素中。</p>\n</blockquote>\n<h3>Select Methods</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Blur()</td>\n<td>取消焦点</td>\n<td></td>\n</tr>\n<tr>\n<td>Focus()</td>\n<td>获取焦点</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>SelectOption props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Disabled</td>\n<td>是否禁用</td>\n<td>Boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>Title</td>\n<td>选中该 SelectOption 后，Select 的 title</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Value</td>\n<td>默认根据此属性值进行筛选</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>ClassName</td>\n<td>SelectOption 器类名</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>SelectOptGroup props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Key</td>\n<td></td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Label</td>\n<td>组名</td>\n<td>string</td>\n<td>无</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>FAQ</h2>\n<h3>点击 <code>dropdownRender</code> 里的内容浮层关闭怎么办？</h3>\n<p>看下 <a href=\"#components-select-demo-custom-dropdown-menu\">dropdownRender 例子</a> 里的说明。</p>\n<h3>自定义 SelectOption 样式导致滚动异常怎么办？</h3>\n<p>这是由于虚拟滚动默认选项高度为 <code>32px</code>，如果你的选项高度小于该值则需要通过 <code>ListItemHeight</code> 属性调整，而 <code>ListHeight</code> 用于设置滚动容器高度：</p>\n<pre><code class=\"language-razor\">&lt;Select ListItemHeight=&quot;10&quot; ListHeight=&quot;250&quot; /&gt;\n</code></pre>\n<p>注意：<code>ListItemHeight</code> 和 <code>ListHeight</code> 为内部属性，如无必要，请勿修改该值。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/_0XzgOis7/Select.svg"
  },
  {
    "Title": "Slider",
    "SubTitle": "滑动输入条",
    "Type": "数据录入",
    "Desc": "<p>滑动型输入器，展示当前值和可选范围。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当用户需要在数值区间/自定义区间内进行选择时，可为连续或离散值。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>defaultValue</td>\n<td>设置初始取值。当 range 为 false 时，使用 number，否则用 [number, number]</td>\n<td>number</td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>值为 true 时，滑块为禁用状态</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>dots</td>\n<td>是否只能拖拽到刻度上</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>included</td>\n<td>marks 不为空对象时有效，值为 true 时表示值为包含关系，false 表示并列</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>marks</td>\n<td>刻度标记，key 的类型必须为 number 且取值在闭区间 [min, max] 内，每个标签可以单独设置样式</td>\n<td>object</td>\n<td></td>\n</tr>\n<tr>\n<td>max</td>\n<td>最大值</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>min</td>\n<td>最小值</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>range</td>\n<td>双滑块模式</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>reverse</td>\n<td>反向坐标轴</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>step</td>\n<td>步长，取值必须大于 0，并且可被 (max - min) 整除。当 marks 不为空对象时，可以设置 step 为 null，此时 Slider 的可选值仅有 marks 标出来的部分。</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>value</td>\n<td>设置当前取值。当 range 为 false 时，使用 number，否则用 [number, number]</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>vertical</td>\n<td>值为 true 时，Slider 为垂直方向</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onAfterChange</td>\n<td>与 onmouseup 触发时机一致，把当前值作为参数传入。</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>当 Slider 的值发生改变时，会触发 onChange 事件，并把改变后的值作为参数传入。</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>tooltipPlacement</td>\n<td>设置 Tooltip 展示位置。参考 Tooltip。</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>tooltipVisible</td>\n<td>值为true时，Tooltip 将会始终显示；否则始终不显示，哪怕在拖拽及移入时。</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>getTooltipPopupContainer</td>\n<td>Tooltip 渲染父节点，默认渲染到 body 上。</td>\n<td>Rendfragment</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/HZ3meFc6W/Silder.svg"
  },
  {
    "Title": "Switch",
    "SubTitle": "开关",
    "Type": "数据录入",
    "Desc": "<p>开关选择器。</p>\n<h2>何时使用</h2>\n<ul>\n<li>需要表示开关状态/两种状态之间的切换时；</li>\n<li>和 <code>checkbox</code>的区别是，切换 <code>switch</code> 会直接触发状态改变，而 checkbox 一般用于状态标记，需要和提交操作配合。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Checked</td>\n<td>指定当前是否选中</td>\n<td>boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>CheckedChildren</td>\n<td>选中时的内容</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>DefaultChecked</td>\n<td>初始是否选中</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>是否禁用</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Loading</td>\n<td>加载中的开关</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Size</td>\n<td>开关大小，可选值：default small</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>UnCheckedChildren</td>\n<td>非选中时的内容</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>变化时回调函数</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/zNdJQMhfm/Switch.svg"
  },
  {
    "Title": "TimePicker",
    "SubTitle": "时间选择框",
    "Type": "数据录入",
    "Desc": "<p>输入或选择时间的控件。</p>\n<h2>何时使用</h2>\n<hr />\n<p>当用户需要输入一个时间，可以点击标准输入框，弹出时间面板进行选择。</p>\n<p>时间选择器完成度较低，暂时只实现了以下功能：\nautoFocus、bordered、className、defaultValue、\ndisabled、format、inputReadOnly、open、placeholder、\npopupStyle、renderExtraFooter、value、onChange、onOpenChange</p>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/h04Zsl98I/TimePicker.svg"
  },
  {
    "Title": "Transfer",
    "SubTitle": "穿梭框",
    "Type": "数据录入",
    "Desc": "<p>双栏穿梭选择框。</p>\n<h2>何时使用</h2>\n<ul>\n<li>需要在多个可选项中进行多选时。</li>\n<li>比起 Select 和 TreeSelect，穿梭框占据更大的空间，可以展示可选项的更多信息。</li>\n</ul>\n<p>穿梭选择框用直观的方式在两栏中移动元素，完成选择行为。</p>\n<p>选择一个或以上的选项后，点击对应的方向键，可以把选中的选项移动到另一栏。其中，左边一栏为 <code>source</code>，右边一栏为 <code>target</code>，API 的设计也反映了这两个概念。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Transfer</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DataSource</td>\n<td>数据源，其中的数据将会被渲染到左边一栏中，<code>targetKeys</code> 中指定的除外。</td>\n<td>List&lt;TransferItem&gt;</td>\n<td>null</td>\n<td></td>\n</tr>\n<tr>\n<td>Disabled</td>\n<td>是否禁用</td>\n<td>bool</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>Footer</td>\n<td>底部渲染函数</td>\n<td>OneOf&lt;string, RenderFragment&gt;</td>\n<td>null</td>\n<td></td>\n</tr>\n<tr>\n<td>Style</td>\n<td>两个穿梭框的自定义样式</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Operations</td>\n<td>操作文案集合，顺序从上至下</td>\n<td>string[]</td>\n<td>['right', 'left']</td>\n<td></td>\n</tr>\n<tr>\n<td>Render</td>\n<td>每行数据渲染函数，该函数的入参为 <code>DataSource</code> 中的项，返回值为 OneOf&lt;string, RenderFragment&gt;。</td>\n<td>Func&lt;TransferItem, OneOf&lt;string, RenderFragment&gt;&gt;</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SelectedKeys</td>\n<td>设置哪些项应该被选中</td>\n<td>string[]</td>\n<td>[]</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowSearch</td>\n<td>是否显示搜索框</td>\n<td>bool</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowSelectAll</td>\n<td>是否展示全选勾选框</td>\n<td>bool</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>TargetKeys</td>\n<td>显示在右侧框数据的 key 集合</td>\n<td>string[]</td>\n<td>[]</td>\n<td></td>\n</tr>\n<tr>\n<td>Titles</td>\n<td>标题集合，顺序从左至右</td>\n<td>string[]</td>\n<td>['', '']</td>\n<td></td>\n</tr>\n<tr>\n<td>SelectAllLabels</td>\n<td>自定义顶部多选框标题的集合</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OnChange</td>\n<td>选项在两栏之间转移时的回调函数</td>\n<td>TransferSelectChangeArgs</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OnScroll</td>\n<td>选项列表滚动时的回调函数</td>\n<td>TransferScrollArgs</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OnSearch</td>\n<td>搜索框内容时改变时的回调函数</td>\n<td>TransferSearchArgs</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnSelectChange</td>\n<td>选中项发生改变时的回调函数</td>\n<td>TransferSelectChangeArgs</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Render Props</h3>\n<p>Transfer 支持接收 <code>ChildContent</code> 自定义渲染列表，并返回以下参数：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>direction</td>\n<td>渲染列表的方向</td>\n<td><code>left</code> | <code>right</code></td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用列表</td>\n<td>bool</td>\n<td></td>\n</tr>\n<tr>\n<td>filteredItems</td>\n<td>过滤后的数据</td>\n<td>List&lt;TransferItem&gt;</td>\n<td></td>\n</tr>\n<tr>\n<td>onItemSelect</td>\n<td>勾选条目</td>\n<td>(key: string, selected: boolean)</td>\n<td></td>\n</tr>\n<tr>\n<td>onItemSelectAll</td>\n<td>勾选一组条目</td>\n<td>(keys: string[], selected: boolean)</td>\n<td></td>\n</tr>\n<tr>\n<td>selectedKeys</td>\n<td>选中的条目</td>\n<td>string[]</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>注意</h2>\n<p>按照 Blazor 的<a href=\"http://facebook.github.io/react/docs/lists-and-keys.html#keys\">规范</a>，所有的组件数组必须绑定 key。在 Transfer 中，<code>DataSource</code>里的数据值需要指定 <code>Key</code> 值。对于 <code>DataSource</code> 默认将每列数据的 <code>Key</code> 属性作为唯一的标识。</p>\n<p>如果你的数据没有这个属性，务必使用 <code>rowKey</code> 来指定数据列的主键。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/QAXskNI4G/Transfer.svg"
  },
  {
    "Title": "Upload",
    "SubTitle": "上传",
    "Type": "数据录入",
    "Desc": "<p>文件选择上传和拖拽上传控件。</p>\n<h2>何时使用</h2>\n<p>上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程。</p>\n<ul>\n<li>当需要上传一个或一些文件时。</li>\n<li>当需要展现上传的进度时。</li>\n<li>当需要使用拖拽交互时。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>accept</td>\n<td>接受上传的文件类型, 详见 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\">input accept Attribute</a></td>\n<td>string</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>action</td>\n<td>上传的地址</td>\n<td>string|(file) =&gt; <code>Promise</code></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>上传请求的 http method</td>\n<td>string</td>\n<td>'post'</td>\n<td></td>\n</tr>\n<tr>\n<td>directory</td>\n<td>支持上传文件夹（<a href=\"https://caniuse.com/#feat=input-file-directory\">caniuse</a>）</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>beforeUpload</td>\n<td>上传文件之前的钩子，参数为上传的文件，若返回 <code>false</code> 则停止上传。支持返回一个 Promise 对象，Promise 对象 reject 时则停止上传，resolve 时开始上传（ resolve 传入 <code>File</code> 或 <code>Blob</code> 对象则上传 resolve 传入对象）。<strong>注意：IE9 不支持该方法</strong>。</td>\n<td>(file, fileList) =&gt; <code>boolean | Promise</code></td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>customRequest</td>\n<td>通过覆盖默认的上传行为，可以自定义自己的上传实现</td>\n<td>Function</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>data</td>\n<td>上传所需额外参数或返回上传额外参数的方法</td>\n<td>object|(file) =&gt; object</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultFileList</td>\n<td>默认已经上传的文件列表</td>\n<td>object[]</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>fileList</td>\n<td>已经上传的文件列表（受控），使用此参数时，如果遇到 <code>onChange</code> 只调用一次的问题，请参考 <a href=\"https://github.com/ant-design/ant-design/issues/2423\">#2423</a></td>\n<td>object[]</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>headers</td>\n<td>设置上传的请求头部，IE10 以上有效</td>\n<td>object</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>listType</td>\n<td>上传列表的内建样式，支持三种基本样式 <code>text</code>, <code>picture</code> 和 <code>picture-card</code></td>\n<td>string</td>\n<td>'text'</td>\n<td></td>\n</tr>\n<tr>\n<td>multiple</td>\n<td>是否支持多选文件，<code>ie10+</code> 支持。开启后按住 ctrl 可选择多个文件</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>发到后台的文件参数名</td>\n<td>string</td>\n<td>'file'</td>\n<td></td>\n</tr>\n<tr>\n<td>previewFile</td>\n<td>自定义文件预览逻辑</td>\n<td>(file: File | Blob) =&gt; Promise&lt;dataURL: string&gt;</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>showUploadList</td>\n<td>是否展示文件列表, 可设为一个对象，用于单独设定 <code>showPreviewIcon</code>, <code>showRemoveIcon</code>, <code>showDownloadIcon</code>, <code>removeIcon</code> 和 <code>downloadIcon</code></td>\n<td>Boolean or { showPreviewIcon?: boolean, showRemoveIcon?: boolean, showDownloadIcon?: boolean, removeIcon?: React.ReactNode, downloadIcon?: React.ReactNode }</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>supportServerRender</td>\n<td>服务端渲染时需要打开这个</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>withCredentials</td>\n<td>上传请求时是否携带 cookie</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>openFileDialogOnClick</td>\n<td>点击打开文件对话框</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>上传文件改变时的状态，详见 <a href=\"#onChange\">onChange</a></td>\n<td>Function</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onPreview</td>\n<td>点击文件链接或预览图标时的回调</td>\n<td>Function(file)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onRemove \u00A0</td>\n<td>点击移除文件时的回调，返回值为 false 时不移除。支持返回一个 Promise 对象，Promise 对象 resolve(false) 或 reject 时不移除。 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0</td>\n<td>Function(file): <code>boolean | Promise</code></td>\n<td>无 \u00A0</td>\n<td></td>\n</tr>\n<tr>\n<td>onDownload</td>\n<td>点击下载文件时的回调，如果没有指定，则默认跳转到文件 url 对应的标签页。</td>\n<td>Function(file): void</td>\n<td>跳转新标签页</td>\n<td></td>\n</tr>\n<tr>\n<td>transformFile \u00A0</td>\n<td>在上传之前转换文件。支持返回一个 Promise 对象 \u00A0</td>\n<td>Function(file): <code>string | Blob | File | Promise&lt;string | Blob | File&gt;</code></td>\n<td>无 \u00A0</td>\n<td></td>\n</tr>\n<tr>\n<td>iconRender</td>\n<td>自定义显示 icon</td>\n<td>(file: UploadFile, listType?: UploadListType) =&gt; React.ReactNode</td>\n<td>无</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>onChange</h3>\n<blockquote>\n<p>上传中、完成、失败都会调用这个函数。</p>\n</blockquote>\n<p>文件状态改变的回调，返回为：</p>\n<pre><code class=\"language-js\">{\n  file: { /* ... */ },\n  fileList: [ /* ... */ ],\n  event: { /* ... */ },\n}\n</code></pre>\n<ol>\n<li><p><code>file</code> 当前操作的文件对象。</p>\n<pre><code class=\"language-js\">{\n   uid: 'uid',      // 文件唯一标识，建议设置为负数，防止和内部产生的 id 冲突\n   name: 'xx.png'   // 文件名\n   status: 'done', // 状态有：uploading done error removed\n   response: '{&quot;status&quot;: &quot;success&quot;}', // 服务端响应内容\n   linkProps: '{&quot;download&quot;: &quot;image&quot;}', // 下载链接额外的 HTML 属性\n}\n</code></pre>\n</li>\n<li><p><code>fileList</code> 当前的文件列表。</p>\n</li>\n<li><p><code>event</code> 上传中的服务端响应内容，包含了上传进度等信息，高级浏览器支持。</p>\n</li>\n</ol>\n<h2>FAQ</h2>\n<h3>服务端如何实现？</h3>\n<ul>\n<li>服务端上传接口实现可以参考 <a href=\"https://github.com/blueimp/jQuery-File-Upload/wiki#server-side\">jQuery-File-Upload</a>。</li>\n<li>如果要做本地 mock 可以参考这个 <a href=\"https://github.com/react-component/upload/blob/master/server.js\">express 的例子</a>。</li>\n</ul>\n<h3>如何显示下载链接？</h3>\n<p>请使用 fileList 属性设置数组项的 url 属性进行展示控制。</p>\n<h3><code>customRequest</code> 怎么使用？</h3>\n<p>请参考 <a href=\"https://github.com/react-component/upload#customrequest\">https://github.com/react-component/upload#customrequest</a>。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/QaeBt_ZMg/Upload.svg"
  },
  {
    "Title": "Avatar",
    "SubTitle": "头像",
    "Type": "数据展示",
    "Desc": "<p>用来代表用户或事物，支持图片、图标或字符展示。</p>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/aBcnbw68hP/Avatar.svg"
  },
  {
    "Title": "Badge",
    "SubTitle": "徽标数",
    "Type": "数据展示",
    "Desc": "<p>图标右上角的圆形徽标数字。</p>\n<h2>何时使用</h2>\n<p>一般出现在通知图标或头像的右上角，用于显示需要处理的消息条数，通过醒目视觉形式吸引用户处理。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<pre><code class=\"language-jsx\">&lt;Badge count={5}&gt;\n  &lt;a href=&quot;#&quot; className=&quot;head-example&quot; /&gt;\n&lt;/Badge&gt;\n</code></pre>\n<pre><code class=\"language-jsx\">&lt;Badge count={5} /&gt;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Color</td>\n<td>自定义小圆点的颜色</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Count</td>\n<td>展示的数字，大于 overflowCount 时显示为 <code>${overflowCount}+</code>，为 0 时隐藏</td>\n<td>ReactNode</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Dot</td>\n<td>不展示数字，只有一个小红点</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>Offset</td>\n<td>设置状态点的位置偏移，格式为 <code>[x, y]</code></td>\n<td><code>[number, number]</code></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OverflowCount</td>\n<td>展示封顶的数字值</td>\n<td>number</td>\n<td>99</td>\n<td></td>\n</tr>\n<tr>\n<td>ShowZero</td>\n<td>当数值为 0 时，是否展示 Badge</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>Status</td>\n<td>设置 Badge 为状态点</td>\n<td><code>success</code> | <code>processing</code> | <code>default</code> | <code>error</code> | <code>warning</code></td>\n<td>''</td>\n<td></td>\n</tr>\n<tr>\n<td>Text</td>\n<td>在设置了 <code>status</code> 的前提下有效，设置状态点的文本</td>\n<td>string</td>\n<td>''</td>\n<td></td>\n</tr>\n<tr>\n<td>Title</td>\n<td>设置鼠标放在状态点上时显示的文字</td>\n<td>string</td>\n<td><code>count</code></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/6%26GF9WHwvY/Badge.svg"
  },
  {
    "Title": "Calendar",
    "SubTitle": "日历",
    "Type": "数据展示",
    "Desc": "<p>按照日历形式展示数据的容器。</p>\n<h2>何时使用</h2>\n<p>当数据是日期或按照日期划分时，例如日程、课表、价格日历等，农历等。目前支持年/月切换。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<p>**注意：**Calendar 部分 locale 是从 value 中读取，所以请先正确设置 moment 的 locale。</p>\n<pre><code class=\"language-jsx\">// 默认语言为 en-US，所以如果需要使用其他语言，推荐在入口文件全局设置 locale\n// import moment from 'moment';\n// import 'moment/locale/zh-cn';\n// moment.locale('zh-cn');\n\n&lt;Calendar\n  dateCellRender={dateCellRender}\n  monthCellRender={monthCellRender}\n  onPanelChange={onPanelChange}\n  onSelect={onSelect}\n/&gt;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dateCellRender</td>\n<td>自定义渲染日期单元格，返回内容会被追加到单元格</td>\n<td>Func(DateTime) =&gt; RenderFragment</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>dateFullCellRender</td>\n<td>自定义渲染日期单元格，返回内容覆盖单元格</td>\n<td>Func(DateTime) =&gt; RenderFragment</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>默认展示的日期</td>\n<td>DateTime</td>\n<td>默认日期</td>\n<td></td>\n</tr>\n<tr>\n<td>disabledDate</td>\n<td>不可选择的日期</td>\n<td>(DateTime) =&gt; boolean</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>fullscreen</td>\n<td>是否全屏显示</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>locale(TODO)</td>\n<td>国际化配置</td>\n<td>object</td>\n<td><a href=\"https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json\">默认配置</a></td>\n<td></td>\n</tr>\n<tr>\n<td>mode</td>\n<td>初始模式，<code>DatePickerType.Month/DatePickerType.Year</code></td>\n<td>DatePickerType</td>\n<td>DatePickerType.Month</td>\n<td></td>\n</tr>\n<tr>\n<td>monthCellRender</td>\n<td>自定义渲染月单元格，返回内容会被追加到单元格</td>\n<td>Func(DateTime) =&gt; RenderFragment</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>monthFullCellRender</td>\n<td>自定义渲染月单元格，返回内容覆盖单元格</td>\n<td>Func(DateTime) =&gt; RenderFragment</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>validRange</td>\n<td>设置可以显示的日期</td>\n<td>[DateTime, DateTime]</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>展示日期</td>\n<td>DateTime</td>\n<td>当前日期</td>\n<td></td>\n</tr>\n<tr>\n<td>onPanelChange</td>\n<td>日期面板变化回调</td>\n<td>Func(DateTime date, string mode)</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onSelect</td>\n<td>点击选择日期回调</td>\n<td>Func(DateTime）</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>日期变化回调</td>\n<td>Func(DateTime）</td>\n<td>无</td>\n<td></td>\n</tr>\n<tr>\n<td>headerRender</td>\n<td>自定义头部内容</td>\n<td>Func(CalendarHeaderRenderArgs)</td>\n<td>无</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/dPQmLq08DI/Calendar.svg"
  },
  {
    "Title": "Card",
    "SubTitle": "卡片",
    "Type": "数据展示",
    "Desc": "<p>通用卡片容器.</p>\n<h2>何时使用</h2>\n<ul>\n<li>最基础的卡片容器，可承载文字、列表、图片、段落，常用于后台概览页面。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>Card</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Actions</td>\n<td>卡片操作组，位置在卡片底部</td>\n<td>Array(RenderFragment)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Body</td>\n<td>卡片主要区域</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Extra</td>\n<td>卡片右上角的操作区域</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Bordered</td>\n<td>是否有边框</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>BodyStyle</td>\n<td>内容区域自定义样式</td>\n<td>Css Properties</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Cover</td>\n<td>卡片封面</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Loading</td>\n<td>当卡片内容还在加载中时，可以用 loading 展示一个占位</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>card 的尺寸</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Title</td>\n<td>卡片标题</td>\n<td>String or RenderFragement</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>卡片类型，可设置为 inner 或 不设置</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Card.Grid</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ChildContent</td>\n<td>子容器</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Hoverable</td>\n<td>鼠标移过时可浮起</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>定义网格容器类名的样式</td>\n<td>CSS Properties</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Card.Meta</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Avatar</td>\n<td>头像和图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>ChildContent</td>\n<td>子容器</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>描述内容</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>定义容器类名的样式</td>\n<td>CSS Properties</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Title</td>\n<td>标题内容</td>\n<td>String or RenderFragement</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/NqXt8DJhky/Card.svg"
  },
  {
    "Title": "Carousel",
    "SubTitle": "走马灯",
    "Type": "数据展示",
    "Desc": "<p>旋转木马，一组轮播的区域。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当有一组平级的内容。</li>\n<li>当内容空间不足时，可以用走马灯的形式进行收纳，进行轮播展现。</li>\n<li>常用于一组图片或卡片轮播。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AfterChange</td>\n<td>(ToDo)切换面板的回调</td>\n<td>function(current)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>ChildContent</td>\n<td>子内容</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Autoplay</td>\n<td>是否自动切换</td>\n<td>TimeSpan</td>\n<td></td>\n</tr>\n<tr>\n<td>BeforeChange</td>\n<td>(ToDo)切换面板的回调</td>\n<td>function(from, to)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>DotPosition</td>\n<td>面板指示点位置，可选 <code>top</code> <code>bottom</code> <code>left</code> <code>right</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Dots</td>\n<td>(ToDo)是否显示面板指示点，如果为 object 则同时可以指定 dotsClass</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Easing</td>\n<td>(ToDo)动画效果</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Effect</td>\n<td>动画效果函数，可取 scrollx, fade</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/%24C9tmj978R/Carousel.svg"
  },
  {
    "Title": "Collapse",
    "SubTitle": "折叠面板",
    "Type": "数据展示",
    "Desc": "<p>可以折叠/展开的内容区域。</p>\n<h2>何时使用</h2>\n<ul>\n<li>对复杂区域进行分组和隐藏，保持页面的整洁。</li>\n<li><code>手风琴</code> 是一种特殊的折叠面板，只允许单个内容区域展开。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Collapse</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Accordion</code></td>\n<td>是否每次只打开一个tab</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>Bordered</code></td>\n<td>是否有边框</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>ExpandIconPosition</code></td>\n<td>设置图标位置</td>\n<td><code>'left' \\| 'right'</code></td>\n<td><code>left</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Panel</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Disabled</code></td>\n<td>禁用后的面板展开与否将无法通过用户交互改变</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>Header</code></td>\n<td>面板头内容</td>\n<td><code>string \\| RenderFragment</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>ExpandedIcon</code></td>\n<td>自定义切换图标</td>\n<td><code>string \\| RenderFragment</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>Extra</code></td>\n<td>自定义渲染每个面板右上角的内容</td>\n<td><code>string \\| RenderFragment</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>ShowArrow</code></td>\n<td>是否展示箭头</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>Active</code></td>\n<td>面板是否展开，可双向绑定</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>ActiveChange</code></td>\n<td>面板展开回调</td>\n<td><code>EventCallback&lt;boolean&gt;</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/IxH16B9RD/Collapse.svg"
  },
  {
    "Title": "Comment",
    "SubTitle": "评论",
    "Type": "数据展示",
    "Desc": "<p>对网站内容的反馈、评价和讨论。</p>\n<h2>何时使用</h2>\n<p>评论组件可用于对事物的讨论，例如页面、博客文章、问题等等。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>actions</td>\n<td>在评论内容下面呈现的操作项列表</td>\n<td>Array<ReactNode></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>author</td>\n<td>要显示为注释作者的元素</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>avatar</td>\n<td>要显示为评论头像的元素 - 通常是 antd <code>Avatar</code> 或者 src</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>children</td>\n<td>嵌套注释应作为注释的子项提供</td>\n<td>ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>content</td>\n<td>评论的主要内容</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>datetime</td>\n<td>展示时间描述</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/ILhxpGzBO/Comment.svg"
  },
  {
    "Title": "Descriptions",
    "SubTitle": "描述列表",
    "Type": "数据展示",
    "Desc": "<p>成组显示多个只读字段。</p>\n<h2>何时使用</h2>\n<p>常见于详情页的信息展示。</p>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/MjtG9_FOI/Descriptions.svg"
  },
  {
    "Title": "Empty",
    "SubTitle": "空状态",
    "Type": "数据展示",
    "Desc": "<p>空状态时的展示占位图。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当目前没有数据时，用于显式的用户提示。</li>\n<li>初始化场景时的引导创建流程。</li>\n</ul>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/MNbKfLBVb/Empty.svg"
  },
  {
    "Title": "List",
    "SubTitle": "列表",
    "Type": "数据展示",
    "Desc": "<p>通用列表。</p>\n<h2>何时使用</h2>\n<p>最基础的列表展示，可承载文字、列表、图片、段落，常用于后台数据展示页面。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>List</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>bordered</td>\n<td>是否展示边框</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>footer</td>\n<td>列表底部</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>grid</td>\n<td>列表栅格配置</td>\n<td><a href=\"#List-grid-props\">object</a></td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>列表头部</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>itemLayout</td>\n<td>设置 <code>List.Item</code> 布局, 设置成 <code>vertical</code> 则竖直样式显示, 默认横排</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>loading</td>\n<td>当卡片内容还在加载中时，可以用 <code>loading</code> 展示一个占位</td>\n<td>boolean|<a href=\"/components/spin/#API\">object</a> (<a href=\"https://github.com/ant-design/ant-design/issues/8659\">更多</a>)</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>loadMore</td>\n<td>加载更多</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>locale</td>\n<td>默认文案设置，目前包括空数据文案</td>\n<td>object</td>\n<td>emptyText: '暂无数据'</td>\n<td></td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>对应的 <code>pagination</code> 配置, 设置 <code>false</code> 不显示</td>\n<td>boolean|object</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>size</td>\n<td>list 的尺寸</td>\n<td><code>default</code> | <code>large</code> | <code>small</code></td>\n<td><code>default</code></td>\n<td></td>\n</tr>\n<tr>\n<td>split</td>\n<td>是否展示分割线</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>dataSource</td>\n<td>列表数据源</td>\n<td>any[]</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>renderItem</td>\n<td>当使用 dataSource 时，可以用 <code>renderItem</code> 自定义渲染列表项</td>\n<td><code>item =&gt; ReactNode</code></td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>pagination</h3>\n<p>分页的配置项。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>position</td>\n<td>指定分页显示的位置</td>\n<td><code>top</code> | <code>bottom</code> | <code>both</code></td>\n<td><code>bottom</code></td>\n</tr>\n</tbody>\n</table>\n<p>更多配置项，请查看 <a href=\"/components/pagination/\"><code>Pagination</code></a>。</p>\n<h3>List grid props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>column</td>\n<td>列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>栅格间隔</td>\n<td>number</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>xs</td>\n<td><code>&lt;576px</code> 展示的列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>sm</td>\n<td><code>≥576px</code> 展示的列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>md</td>\n<td><code>≥768px</code> 展示的列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>lg</td>\n<td><code>≥992px</code> 展示的列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>xl</td>\n<td><code>≥1200px</code> 展示的列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>xxl</td>\n<td><code>≥1600px</code> 展示的列数</td>\n<td>number</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>List.Item</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>actions</td>\n<td>列表操作组，根据 <code>itemLayout</code> 的不同, 位置在卡片底部或者最右侧</td>\n<td>Array&lt;ReactNode&gt;</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>extra</td>\n<td>额外内容, 通常用在 <code>itemLayout</code> 为 <code>vertical</code> 的情况下, 展示右侧内容; <code>horizontal</code> 展示在列表元素最右侧</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>List.Item.Meta</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>avatar</td>\n<td>列表元素的图标</td>\n<td>ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>description</td>\n<td>列表元素的描述内容</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>列表元素的标题</td>\n<td>string|ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/5FrZKStG_/List.svg"
  },
  {
    "Title": "Popover",
    "SubTitle": "气泡卡片",
    "Type": "数据展示",
    "Desc": "<p>点击/鼠标移入元素，弹出气泡式的卡片浮层。</p>\n<h2>何时使用</h2>\n<p>当目标元素有进一步的描述和相关操作时，可以收纳到卡片中，根据用户的操作行为进行展现。</p>\n<p>和 <code>Tooltip</code> 的区别是，用户可以对浮层上的元素进行操作，因此它可以承载更复杂的内容，比如链接或按钮等。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>content</td>\n<td>卡片内容</td>\n<td>string|ReactNode|() =&gt; ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>卡片标题</td>\n<td>string|ReactNode|() =&gt; ReactNode</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>更多属性请参考 <a href=\"/components/tooltip/#API\">Tooltip</a>。</p>\n<h2>注意</h2>\n<p>请确保 <code>Popover</code> 的子元素能接受 <code>onMouseEnter</code>、<code>onMouseLeave</code>、<code>onFocus</code>、<code>onClick</code> 事件。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/1PNL1p_cO/Popover.svg"
  },
  {
    "Title": "Statistic",
    "SubTitle": "统计数值",
    "Type": "数据展示",
    "Desc": "<p>展示统计数值。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当需要突出某个或某组数字时。</li>\n<li>当需要展示带描述的统计类数据时使用。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<h4>Statistic</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>decimalSeparator</td>\n<td>设置小数点</td>\n<td>string</td>\n<td>.</td>\n<td></td>\n</tr>\n<tr>\n<td>groupSeparator</td>\n<td>设置千分位标识符</td>\n<td>string</td>\n<td>,</td>\n<td></td>\n</tr>\n<tr>\n<td>precision</td>\n<td>数值精度</td>\n<td>int</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>设置数值的前缀</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>suffix</td>\n<td>设置数值的后缀</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>数值的标题</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>数值内容</td>\n<td>decimal|Datetime|TimeSpan</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>valueStyle</td>\n<td>设置数值的样式</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h4>Statistic.Countdown</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>format</td>\n<td>格式化倒计时展示，参考 <a href=\"https://docs.microsoft.com/zh-cn/dotnet/standard/base-types/custom-timespan-format-strings\">TimeSpan</a></td>\n<td>string</td>\n<td>@&quot;hh:mm:ss&quot;</td>\n<td></td>\n</tr>\n<tr>\n<td>onFinish</td>\n<td>倒计时完成时触发</td>\n<td>() =&gt; void</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>prefix</td>\n<td>设置数值的前缀</td>\n<td>string | RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>suffix</td>\n<td>设置数值的后缀</td>\n<td>string | RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>数值的标题</td>\n<td>string | RenderFragment</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>数值内容</td>\n<td>Datetime | TimeSpan</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>valueStyle</td>\n<td>设置数值的样式</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/rcBNhLBrKbE/Statistic.svg"
  },
  {
    "Title": "Table",
    "SubTitle": "表格",
    "Type": "数据展示",
    "Desc": "<p>展示行列数据。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当有大量结构化的数据需要展现时；</li>\n<li>当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。</li>\n</ul>\n<h2>如何使用</h2>\n<p>指定表格的数据源 <code>dataSource</code> 为一个数组。</p>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/f-SbcX2Lx/Table.svg"
  },
  {
    "Title": "Tabs",
    "SubTitle": "标签页",
    "Type": "数据展示",
    "Desc": "<p>选项卡切换组件。</p>\n<h2>何时使用</h2>\n<p>提供平级的区域将大块内容进行收纳和展现，保持界面整洁。</p>\n<p>Ant Design 依次提供了三级选项卡，分别用于不同的场景。</p>\n<ul>\n<li>卡片式的页签，提供可关闭的样式，常用于容器顶部。</li>\n<li>既可用于容器顶部，也可用于容器内部，是最通用的 Tabs。</li>\n<li><a href=\"/components/radio/#components-radio-demo-radiobutton\">RadioButton</a> 可作为更次级的页签来使用。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Tabs</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>activeKey</td>\n<td>当前激活 tab 面板的 key</td>\n<td>string</td>\n<td>无</td>\n</tr>\n<tr>\n<td>animated</td>\n<td>是否使用动画切换 Tabs，在 <code>tabPosition=top|bottom</code> 时有效</td>\n<td>boolean | {inkBar:boolean, tabPane:boolean}</td>\n<td>true, 当 type=&quot;card&quot; 时为 false</td>\n</tr>\n<tr>\n<td>renderTabBar</td>\n<td>替换 TabBar，用于二次封装标签头</td>\n<td>(props: DefaultTabBarProps, DefaultTabBar: React.ComponentClass) =&gt; React.ReactElement</td>\n<td>无</td>\n</tr>\n<tr>\n<td>defaultActiveKey</td>\n<td>初始化选中面板的 key，如果没有设置 activeKey</td>\n<td>string</td>\n<td>第一个面板</td>\n</tr>\n<tr>\n<td>hideAdd</td>\n<td>是否隐藏加号图标，在 <code>type=&quot;editable-card&quot;</code> 时有效</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>size</td>\n<td>大小，提供 <code>large</code> <code>default</code> 和 <code>small</code> 三种大小</td>\n<td>string</td>\n<td>'default'</td>\n</tr>\n<tr>\n<td>tabBarExtraContent</td>\n<td>tab bar 上额外的元素</td>\n<td>React.ReactNode</td>\n<td>无</td>\n</tr>\n<tr>\n<td>tabBarGutter</td>\n<td>tabs 之间的间隙</td>\n<td>number</td>\n<td>无</td>\n</tr>\n<tr>\n<td>tabBarStyle</td>\n<td>tab bar 的样式对象</td>\n<td>object</td>\n<td>-</td>\n</tr>\n<tr>\n<td>tabPosition</td>\n<td>页签位置，可选值有 <code>top</code> <code>right</code> <code>bottom</code> <code>left</code></td>\n<td>string</td>\n<td>'top'</td>\n</tr>\n<tr>\n<td>type</td>\n<td>页签的基本样式，可选 <code>line</code>、<code>card</code> <code>editable-card</code> 类型</td>\n<td>string</td>\n<td>'line'</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>切换面板的回调</td>\n<td>Function(activeKey) {}</td>\n<td>无</td>\n</tr>\n<tr>\n<td>onEdit</td>\n<td>新增和删除页签的回调，在 <code>type=&quot;editable-card&quot;</code> 时有效</td>\n<td>(targetKey, action): void</td>\n<td>无</td>\n</tr>\n<tr>\n<td>onNextClick</td>\n<td>next 按钮被点击的回调</td>\n<td>Function</td>\n<td>无</td>\n</tr>\n<tr>\n<td>onPrevClick</td>\n<td>prev 按钮被点击的回调</td>\n<td>Function</td>\n<td>无</td>\n</tr>\n<tr>\n<td>onTabClick</td>\n<td>tab 被点击的回调</td>\n<td>Function</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n<h3>Tabs.TabPane</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>forceRender</td>\n<td>被隐藏时是否渲染 DOM 结构</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>key</td>\n<td>对应 activeKey</td>\n<td>string</td>\n<td>无</td>\n</tr>\n<tr>\n<td>tab</td>\n<td>选项卡头显示文字</td>\n<td>string|ReactNode</td>\n<td>无</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/lkI2hNEDr2V/Tabs.svg"
  },
  {
    "Title": "Tag",
    "SubTitle": "标签",
    "Type": "数据展示",
    "Desc": "<p>进行标记和分类的小标签。</p>\n<h2>何时使用</h2>\n<ul>\n<li>用于标记事物的属性和维度。</li>\n<li>进行分类。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Mode</td>\n<td>方式选择 <code>default</code>, <code>closable</code>, <code>checkable</code></td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>Closable</td>\n<td>值标签是否可以关闭</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Checked</td>\n<td>标签是否关闭所对应的值</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>CheckedChange</td>\n<td>点击标签时触发的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Color</td>\n<td>预设标签色</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnClose</td>\n<td>关闭时的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Visible</td>\n<td>是否显示标签</td>\n<td>boolean</td>\n<td></td>\n</tr>\n<tr>\n<td>Icon</td>\n<td>设置图标</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/cH1BOLfxC/Tag.svg"
  },
  {
    "Title": "Timeline",
    "SubTitle": "时间轴",
    "Type": "数据展示",
    "Desc": "<p>垂直展示的时间流信息。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当有一系列信息需按时间排列时，可正序和倒序。</li>\n<li>需要有一条时间轴进行视觉上的串联时。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>时间轴</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Pending</td>\n<td>指定最后一个幽灵节点是否存在或内容</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>PendingDot</td>\n<td>当最后一个幽灵节点存在時，指定其时间图点</td>\n<td>RenderFragment</td>\n<td></td>\n</tr>\n<tr>\n<td>Reverse</td>\n<td>节点排序</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Mode</td>\n<td>通过设置 mode 可以改变时间轴和内容的相对位置，可选 <code>alternate</code> <code>left</code> <code>right</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>Timeline.Item\n时间轴的每一个节点。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Color</td>\n<td>指定圆圈颜色 blue, red, green, gray，或自定义的色值</td>\n<td>string,</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Dot</td>\n<td>自定义时间轴点</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>Position</td>\n<td>自定义节点位置 <code>left</code>,<code>right</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Label</td>\n<td>设置标签</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/antfincdn/vJmo00mmgR/Timeline.svg"
  },
  {
    "Title": "Tooltip",
    "SubTitle": "文字提示",
    "Type": "数据展示",
    "Desc": "<p>简单的文字提示气泡框。</p>\n<h2>何时使用</h2>\n<p>鼠标移入则显示提示，移出消失，气泡浮层不承载复杂文本和操作。</p>\n<p>可用来代替系统默认的 <code>title</code> 提示，提供一个<code>按钮/文字/操作</code>的文案解释。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Title</td>\n<td>提示文字</td>\n<td>string|RenderFragment</td>\n<td>string.Empty</td>\n</tr>\n</tbody>\n</table>\n<h3>共同的 API</h3>\n<p>以下 API 为 Tooltip、Popconfirm、Popover 共享的 API。</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ArrowPointAtCenter</td>\n<td>箭头是否指向目标元素中心</td>\n<td>bool</td>\n<td><code>false</code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>AutoAdjustOverflow</td>\n<td>气泡被遮挡时自动调整位置</td>\n<td>bool</td>\n<td><code>true</code></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>DefaultVisible</td>\n<td>默认是否显隐</td>\n<td>bool</td>\n<td>false</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>PopupContainerSelector</td>\n<td>浮层渲染父节点，默认渲染到 body 上</td>\n<td>string (css选择器)</td>\n<td>-</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MouseEnterDelay</td>\n<td>鼠标移入后延时多少才显示 Tooltip，单位：秒</td>\n<td>double</td>\n<td>0.1</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>MouseLeaveDelay</td>\n<td>鼠标移出后延时多少才隐藏 Tooltip，单位：秒</td>\n<td>double</td>\n<td>0.1</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OverlayClassName</td>\n<td>卡片类名</td>\n<td>string</td>\n<td>无</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OverlayStyle</td>\n<td>卡片样式</td>\n<td>string</td>\n<td>无</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Placement</td>\n<td>气泡框位置，可选 <code>Top</code> <code>Left</code> <code>Right</code> <code>Bottom</code> <code>TopLeft</code> <code>TopRight</code> <code>BottomLeft</code> <code>BottomRight</code> <code>LeftTop</code> <code>LeftBottom</code> <code>RightTop</code> <code>RightBottom</code></td>\n<td>PlacementType</td>\n<td>PlacementType.Top</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Trigger</td>\n<td>触发行为，可选 Her/Focus/Click/ContextMenu`，可使用数组设置多个触发行为</td>\n<td>TriggerType[]</td>\n<td>TriggerType.Hover</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Visible</td>\n<td>用于手动控制浮层显隐</td>\n<td>bool</td>\n<td>false</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>OnVisibleChange</td>\n<td>显示隐藏的回调</td>\n<td>EventCallback<bool></td>\n<td>-</td>\n<td></td>\n<td></td>\n<td>bool</td>\n<td>false</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2>注意</h2>\n<p>请确保 <code>Tooltip</code> 的子元素能接受 <code>onMouseEnter</code>、<code>onMouseLeave</code>、<code>onFocus</code>、<code>onClick</code> 事件。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/Vyyeu8jq2/Tooltp.svg"
  },
  {
    "Title": "Tree",
    "SubTitle": "树形控件",
    "Type": "数据展示",
    "Desc": "<p>多层次的结构列表。</p>\n<h2>何时使用</h2>\n<p>文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。使用 <code>树控件</code> 可以完整展现其中的层级关系，并具有展开收起选择等交互功能。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Tree props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/Xh-oWqg9k/Tree.svg"
  },
  {
    "Title": "Alert",
    "SubTitle": "警告提示",
    "Type": "反馈",
    "Desc": "<p>警告提示，展现需要关注的信息。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当某个页面需要向用户显示警告的信息时。</li>\n<li>非浮层的静态展现形式，始终展现，不会自动消失，用户可以点击关闭。</li>\n</ul>\n",
    "ApiDoc": "",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/8emPa3fjl/Alert.svg"
  },
  {
    "Title": "Drawer",
    "SubTitle": "抽屉",
    "Type": "反馈",
    "Desc": "<p>屏幕边缘滑出的浮层面板。</p>\n<h2>何时使用</h2>\n<p>抽屉从父窗体边缘滑入，覆盖住部分父窗体内容。用户在抽屉内操作时不必离开当前任务，操作完成后，可以平滑地回到到原任务。</p>\n<ul>\n<li>当需要一个附加的面板来控制父窗体内容，这个面板在需要时呼出。比如，控制界面展示样式，往界面中添加内容。</li>\n<li>当需要在当前任务流中插入临时任务，创建或预览附加内容。比如展示协议条款，创建子对象。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Drawer</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Title</td>\n<td>标题</td>\n<td>string or slot</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>BodyStyle</td>\n<td>可用于设置 Drawer 内容部分的样式</td>\n<td>object</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Closable</td>\n<td>是否显示右上角的关闭按钮</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>ChildContent</td>\n<td>抽屉元素之间的子组件</td>\n<td>object</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>MaskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>MaskStyle</td>\n<td>遮罩样式</td>\n<td>object</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Placement</td>\n<td>抽屉的方向,可选值为 <code>left</code> , <code>top</code>,<code>right</code>,<code>bottom</code></td>\n<td>string</td>\n<td><code>right</code></td>\n<td></td>\n</tr>\n<tr>\n<td>WrapClassName</td>\n<td>对话框外层容器的类名</td>\n<td>string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Width</td>\n<td>宽度</td>\n<td>string|int</td>\n<td>256</td>\n<td></td>\n</tr>\n<tr>\n<td>Height</td>\n<td>高度, 在 placement 为 top 或 bottom 时使用</td>\n<td></td>\n<td>int</td>\n<td>256</td>\n</tr>\n<tr>\n<td>ZIndex</td>\n<td>设置 Drawer 的 z-index</td>\n<td>int</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OffsetX</td>\n<td>X轴方向的偏移量</td>\n<td>int</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>OffsetY</td>\n<td>Y轴方向的偏移量</td>\n<td>int</td>\n<td>0</td>\n<td></td>\n</tr>\n<tr>\n<td>Visible</td>\n<td>Drawer 是否可见</td>\n<td>boolean</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>Keyboard</td>\n<td>是否支持键盘 esc 关闭</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>OnClose</td>\n<td>点击遮罩层或右上角叉或取消按钮的回调</td>\n<td>function(e)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>OnViewInit</td>\n<td>抽屉显示之前回调事件</td>\n<td>function(e)</td>\n<td>-</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>DrawerService</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CreateAsync</td>\n<td>创建并打开一个 Drawer</td>\n<td><code>DrawerConfig</code></td>\n<td><code>DrawerRef</code></td>\n</tr>\n<tr>\n<td>CreateAsync</td>\n<td>创建并打开一个 Drawer</td>\n<td><code>DrawerConfig</code> , TContentParams</td>\n<td><code>DrawerRef&lt;R&gt;</code></td>\n</tr>\n</tbody>\n</table>\n<h3>DrawerOptions</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content</td>\n<td>Drawer body 的内容</td>\n<td><code>OneOf&lt;RenderFragment, string&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>ContentParams</td>\n<td>内容组件的输入参数 / Template的 context</td>\n<td><code>D</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnCancel</td>\n<td>点击遮罩层或右上角叉时执行,将自动关闭对话框（返回false可阻止关闭）</td>\n<td><code>() =&gt; Promise&lt;any&gt;</code>                              <code>Func&lt;bool?&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>Closable</td>\n<td>是否显示右上角的关闭按钮</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>MaskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>Mask</td>\n<td>是否展示遮罩</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>CloseOnNavigation</td>\n<td>导航历史变化时是否关闭抽屉组件</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>Keyboard</td>\n<td>是否支持键盘esc关闭</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>MaskStyle</td>\n<td>遮罩样式</td>\n<td><code>string</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>BodyStyle</td>\n<td>Modal body 样式</td>\n<td><code>string</code></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>Title</td>\n<td>标题</td>\n<td><code>OneOf&lt;RenderFragment, string&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>Width</td>\n<td>宽度</td>\n<td><code>int</code></td>\n<td><code>256</code></td>\n</tr>\n<tr>\n<td>Height</td>\n<td>高度, 只在方向为 <code>'top'</code>或<code>'bottom'</code> 时生效</td>\n<td><code>int</code></td>\n<td><code>256</code></td>\n</tr>\n<tr>\n<td>WrapClassName</td>\n<td>对话框外层容器的类名</td>\n<td><code>string</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>ZIndex</td>\n<td>设置 Drawer 的 <code>z-index</code></td>\n<td><code>int</code></td>\n<td><code>1000</code></td>\n</tr>\n<tr>\n<td>Placement</td>\n<td>抽屉的方向</td>\n<td><code>'top' \\| 'right' \\| 'bottom' \\| 'left'</code></td>\n<td><code>'right'</code></td>\n</tr>\n<tr>\n<td>OffsetX</td>\n<td>x 坐标移量(px)</td>\n<td><code>int</code></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>OffsetY</td>\n<td>y 坐标移量(px), 高度, 只在方向为 <code>'top'</code>或<code>'bottom'</code> 时生效</td>\n<td><code>int</code></td>\n<td><code>0</code></td>\n</tr>\n</tbody>\n</table>\n<h3>DrawerRef</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CloseAsync</td>\n<td>关闭 Drawer</td>\n<td></td>\n</tr>\n<tr>\n<td>OpenAsync</td>\n<td>打开 Drawer</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/7z8NJQhFb/Drawer.svg"
  },
  {
    "Title": "Message",
    "SubTitle": "全局提示",
    "Type": "反馈",
    "Desc": "<p>全局展示操作反馈信息。</p>\n<h2>何时使用</h2>\n<ul>\n<li>可提供成功、警告和错误等反馈信息。</li>\n<li>顶部居中显示并自动消失，是一种不打断用户操作的轻量级提示方式。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<blockquote>\n<p>请确认已经在 <code>App.Razor</code> 中添加了 <code>&lt;AntContainer /&gt;</code> 组件。</p>\n</blockquote>\n<p>组件提供了一些静态方法，使用方式和参数如下：</p>\n<ul>\n<li><code>MessageService.Success(content, [duration], onClose)</code></li>\n<li><code>MessageService.Error(content, [duration], onClose)</code></li>\n<li><code>MessageService.Info(content, [duration], onClose)</code></li>\n<li><code>MessageService.Warning(content, [duration], onClose)</code></li>\n<li><code>MessageService.Warn(content, [duration], onClose)</code> // alias of warning</li>\n<li><code>MessageService.Loading(content, [duration], onClose)</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>content</td>\n<td>提示内容</td>\n<td>string|RenderFragment|MessageConfig</td>\n<td>-</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>自动关闭的延时，单位秒。设为 0 或者 null 时不自动关闭。</td>\n<td>double?</td>\n<td>3</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>关闭时触发的回调函数</td>\n<td>Action</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>组件同时提供 ContinueWith 接口。</p>\n<ul>\n<li><code>MessageService.[level](content, [duration]).ContinueWith(afterClose)</code></li>\n<li><code>MessageService.[level](content, [duration], onClose).ContinueWith(afterClose)</code></li>\n</ul>\n<p>其中<code>MessageService.[level]</code> 是组件已经提供的静态方法。<code>ContinueWith</code> 接口返回值是 Task。</p>\n<p>也可以对象的形式传递参数：</p>\n<ul>\n<li><code>MessageService.Open(config:MessageConfig)</code></li>\n<li><code>MessageService.Success(config:MessageConfig)</code></li>\n<li><code>MessageService.Error(config:MessageConfig)</code></li>\n<li><code>MessageService.Info(config:MessageConfig)</code></li>\n<li><code>MessageService.Warning(config:MessageConfig)</code></li>\n<li><code>MessageService.Warn(config:MessageConfig)</code> // alias of warning</li>\n<li><code>MessageService.Loading(config:MessageConfig)</code></li>\n</ul>\n<p><code>config</code> 对象属性如下：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Content</td>\n<td>提示内容</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Duration</td>\n<td>自动关闭的延时，单位秒。设为 0 或者 null 时不自动关闭。</td>\n<td>double?</td>\n<td>3</td>\n</tr>\n<tr>\n<td>OnClose</td>\n<td>关闭时触发的回调函数</td>\n<td>event Action</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Icon</td>\n<td>自定义图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Key</td>\n<td>当前提示的唯一标志</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>全局方法</h3>\n<p>还提供了全局配置和全局销毁方法：</p>\n<ul>\n<li><code>MessageService.Config(options:MessageGlobalConfig)</code></li>\n<li><code>MessageService.Destroy()</code></li>\n</ul>\n<h4>MessageService.Config</h4>\n<pre><code class=\"language-c#\">MessageService.Config(new MessageGlobalConfig{\n  Top: 100,\n  Duration: 2,\n  MaxCount: 3,\n  Rtl: true,\n});\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Duration</td>\n<td>默认自动关闭延时，单位秒</td>\n<td>double</td>\n<td>3</td>\n</tr>\n<tr>\n<td>MaxCount</td>\n<td>最大显示数, 超过限制时，最早的消息会被自动关闭</td>\n<td>int</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Top</td>\n<td>消息距离顶部的位置</td>\n<td>double</td>\n<td>24</td>\n</tr>\n<tr>\n<td>Rtl</td>\n<td>是否开启 RTL 模式</td>\n<td>bool</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/hAkKTIW0K/Message.svg"
  },
  {
    "Title": "Modal",
    "SubTitle": "对话框",
    "Type": "反馈",
    "Desc": "<p>模态对话框。</p>\n<h2>何时使用</h2>\n<p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 <code>Modal</code> 在当前页面正中打开一个浮层，承载相应的操作。</p>\n<p>另外当需要一个简洁的确认框询问用户时，可以使用 <code>ModalService.Confirm()</code> 等语法糖方法。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AfterClose</td>\n<td>Modal 完全关闭后的回调</td>\n<td>EventCallback</td>\n<td>-</td>\n</tr>\n<tr>\n<td>BodyStyle</td>\n<td>Modal body 样式</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>CancelText</td>\n<td>取消按钮文字</td>\n<td>string|RenderFragment</td>\n<td>Cancel</td>\n</tr>\n<tr>\n<td>Centered</td>\n<td>垂直居中展示 Modal</td>\n<td>bool</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>Closable</td>\n<td>是否显示右上角的关闭按钮</td>\n<td>bool</td>\n<td>true</td>\n</tr>\n<tr>\n<td>CloseIcon</td>\n<td>自定义关闭图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>ConfirmLoading</td>\n<td>确定按钮 loading</td>\n<td>bool</td>\n<td>false</td>\n</tr>\n<tr>\n<td>DestroyOnClose</td>\n<td>关闭时销毁 Modal 里的子元素</td>\n<td>bool</td>\n<td>false</td>\n</tr>\n<tr>\n<td>Footer</td>\n<td>底部内容，当不需要默认底部按钮时，可以设为 <code>null</code></td>\n<td>string|RenderFragment</td>\n<td>确定取消按钮</td>\n</tr>\n<tr>\n<td>ForceRender</td>\n<td>强制渲染 Modal</td>\n<td>bool</td>\n<td>false</td>\n</tr>\n<tr>\n<td>GetContainer</td>\n<td>指定 Modal 挂载的 HTML 节点, false 为挂载在当前 dom</td>\n<td>ElementReference?</td>\n<td>document.body</td>\n</tr>\n<tr>\n<td>Keyboard</td>\n<td>是否支持键盘 esc 关闭</td>\n<td>bool</td>\n<td>true</td>\n</tr>\n<tr>\n<td>Mask</td>\n<td>是否展示遮罩</td>\n<td>bool</td>\n<td>true</td>\n</tr>\n<tr>\n<td>MaskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>bool</td>\n<td>true</td>\n</tr>\n<tr>\n<td>MaskStyle</td>\n<td>遮罩样式</td>\n<td>string</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>OkText</td>\n<td>确认按钮文字</td>\n<td>string|RenderFragment</td>\n<td>OK</td>\n</tr>\n<tr>\n<td>OkType</td>\n<td>确认按钮类型</td>\n<td>string</td>\n<td>primary</td>\n</tr>\n<tr>\n<td>OkButtonProps</td>\n<td>ok 按钮 props</td>\n<td>ButtonProps</td>\n<td>-</td>\n</tr>\n<tr>\n<td>CancelButtonProps</td>\n<td>cancel 按钮 props</td>\n<td>ButtonProps</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Style</td>\n<td>可用于设置浮层的样式，调整浮层位置等</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Title</td>\n<td>标题</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Visible</td>\n<td>对话框是否可见</td>\n<td>bool</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Width</td>\n<td>宽度</td>\n<td>string|number</td>\n<td>520</td>\n</tr>\n<tr>\n<td>WrapClassName</td>\n<td>对话框外层容器的类名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>ZIndex</td>\n<td>设置 Modal 的 <code>z-index</code></td>\n<td>int</td>\n<td>1000</td>\n</tr>\n<tr>\n<td>OnCancel</td>\n<td>点击遮罩层或右上角叉或取消按钮的回调</td>\n<td>EventCallback<MouseEventArgs></td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnOk</td>\n<td>点击确定回调</td>\n<td>EventCallback<MouseEventArgs></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>注意</h4>\n<blockquote>\n<p><code>&lt;Modal /&gt;</code> 默认关闭后状态不会自动清空, 如果希望每次打开都是新内容，请设置 <code>DestroyOnClose</code>。</p>\n</blockquote>\n<h3>ModalService</h3>\n<p>包括：</p>\n<ul>\n<li><code>ModalService.Info</code></li>\n<li><code>ModalService.Success</code></li>\n<li><code>ModalService.Error</code></li>\n<li><code>ModalService.Warning</code></li>\n<li><code>ModalService.Confirm</code></li>\n<li><code>ModalService.CreateAsync</code></li>\n</ul>\n<blockquote>\n<p>请确认已经在 <code>App.Razor</code> 中添加了 <code>&lt;AntContainer /&gt;</code> 组件。</p>\n</blockquote>\n<h4>ConfirmOptions</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AutoFocusButton</td>\n<td>指定自动获得焦点的按钮</td>\n<td>ConfirmAutoFocusButton</td>\n<td><code>ConfirmAutoFocusButton.Ok</code></td>\n</tr>\n<tr>\n<td>CancelText</td>\n<td>设置 Modal.confirm 取消按钮文字</td>\n<td>string</td>\n<td>Cancel</td>\n</tr>\n<tr>\n<td>Centered</td>\n<td>垂直居中展示 Modal</td>\n<td>bool</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>ClassName</td>\n<td>容器类名</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Content</td>\n<td>内容</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Icon</td>\n<td>自定义图标</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>MaskClosable</td>\n<td>点击蒙层是否允许关闭</td>\n<td>bool</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>OkText</td>\n<td>确认按钮文字</td>\n<td>string</td>\n<td>确定</td>\n</tr>\n<tr>\n<td>OkType</td>\n<td>确认按钮类型</td>\n<td>string</td>\n<td>primary</td>\n</tr>\n<tr>\n<td>OkButtonProps</td>\n<td>ok 按钮 props</td>\n<td>ButtonProps</td>\n<td>-</td>\n</tr>\n<tr>\n<td>CancelButtonProps</td>\n<td>cancel 按钮 props</td>\n<td>ButtonProps</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Title</td>\n<td>标题</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Width</td>\n<td>宽度</td>\n<td>string|double</td>\n<td>416</td>\n</tr>\n<tr>\n<td>ZIndex</td>\n<td>设置 Modal 的 <code>z-index</code></td>\n<td>int</td>\n<td>1000</td>\n</tr>\n<tr>\n<td>OnCancel</td>\n<td>取消回调，参数为关闭函数，返回 promise 时 resolve 后自动关闭</td>\n<td>EventCallback<MouseEventArgs>?</td>\n<td>null</td>\n</tr>\n<tr>\n<td>OnOk</td>\n<td>点击确定回调，参数为关闭函数，返回 promise 时 resolve 后自动关闭</td>\n<td>EventCallback<MouseEventArgs>?</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n<p>以上函数调用后，会返回一个引用，可以通过该引用更新和关闭弹窗。</p>\n<pre><code class=\"language-c#\">ConfirmOptions config = new ConfirmOptions();\nvar modelRef = await ModalService.Info(config);\n\nmodelRef.UpdateConfig();\n\nModalService.Destroy(modelRef);\n</code></pre>\n<ul>\n<li><code>ModalService.DestroyAll</code></li>\n</ul>\n<p>使用 <code>ModalService.DestroyAll()</code> 可以销毁弹出的确认窗（即上述的 ModalService.Info、ModalService.Success、ModalService.Error、ModalService.Warning、ModalService.Confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（ModalService.Destroy(config) 适用于主动关闭，而不是路由这样被动关闭）</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/3StSdUlSH/Modal.svg"
  },
  {
    "Title": "Notification",
    "SubTitle": "通知提醒框",
    "Type": "反馈",
    "Desc": "<p>全局展示通知提醒信息。</p>\n<h2>何时使用</h2>\n<p>在系统四个角显示通知提醒信息。经常用于以下情况：</p>\n<ul>\n<li>较为复杂的通知内容。</li>\n<li>带有交互的通知，给出用户下一步的行动点。</li>\n<li>系统主动推送。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<blockquote>\n<p>请确认已经在 <code>App.Razor</code> 中添加了 <code>&lt;AntContainer /&gt;</code> 组件。</p>\n</blockquote>\n<ul>\n<li><code>NotificationService.Open(config:NotificationConfig)</code></li>\n<li><code>NotificationService.Info(config:NotificationConfig)</code></li>\n<li><code>NotificationService.Success(config:NotificationConfig)</code></li>\n<li><code>NotificationService.Warning(config:NotificationConfig)</code></li>\n<li><code>NotificationService.Warn(config:NotificationConfig)</code></li>\n<li><code>NotificationService.Error(config:NotificationConfig)</code></li>\n<li><code>NotificationService.Close(key:string)</code></li>\n<li><code>NotificationService.Destroy()</code></li>\n</ul>\n<p>config 参数如下：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Btn</td>\n<td>自定义关闭按钮</td>\n<td>RenderFragment</td>\n<td>null</td>\n</tr>\n<tr>\n<td>ClassName</td>\n<td>自定义 CSS class</td>\n<td>string</td>\n<td>null</td>\n</tr>\n<tr>\n<td>CloseIcon</td>\n<td>自定义关闭图标</td>\n<td>RenderFragment</td>\n<td>null</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>通知提醒内容，必选</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Duration</td>\n<td>默认 4.5 秒后自动关闭，配置为 null 或者 0 则不自动关闭</td>\n<td>double?</td>\n<td>4.5</td>\n</tr>\n<tr>\n<td>Icon</td>\n<td>自定义图标</td>\n<td>RenderFragment</td>\n<td>null</td>\n</tr>\n<tr>\n<td>Key</td>\n<td>当前通知唯一标志</td>\n<td>string</td>\n<td>null</td>\n</tr>\n<tr>\n<td>Message</td>\n<td>通知提醒标题，必选</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnClose</td>\n<td>当通知关闭时触发的事件</td>\n<td>event Action</td>\n<td>null</td>\n</tr>\n<tr>\n<td>OnClick</td>\n<td>点击通知时触发的事件</td>\n<td>event Action</td>\n<td>null</td>\n</tr>\n<tr>\n<td>Placement</td>\n<td>弹出位置，可选 <code>NotificationPlacement.TopLeft</code> <code>NotificationPlacement.TopRight</code> <code>NotificationPlacement.BottomLeft</code> <code>NotificationPlacement.BottomRight</code></td>\n<td>NotificationPlacement?</td>\n<td><code>NotificationPlacement.TopRight</code></td>\n</tr>\n<tr>\n<td>Style</td>\n<td>自定义内联样式</td>\n<td>string</td>\n<td>null</td>\n</tr>\n</tbody>\n</table>\n<p>还提供了一个全局配置方法，在调用前提前配置，全局一次生效。</p>\n<p><code>NotificationService.Config(config:NotificationGlobalConfig)</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left;\">参数</th>\n<th style=\"text-align: left;\">说明</th>\n<th style=\"text-align: left;\">类型</th>\n<th style=\"text-align: left;\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left;\">Bottom</td>\n<td style=\"text-align: left;\">消息从底部弹出时，距离底部的位置，单位像素。</td>\n<td style=\"text-align: left;\">double?</td>\n<td style=\"text-align: left;\">24</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">Top</td>\n<td style=\"text-align: left;\">消息从顶部弹出时，距离顶部的位置，单位像素。</td>\n<td style=\"text-align: left;\">double?</td>\n<td style=\"text-align: left;\">24</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">CloseIcon</td>\n<td style=\"text-align: left;\">自定义关闭图标</td>\n<td style=\"text-align: left;\">RenderFragment</td>\n<td style=\"text-align: left;\">-</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">Duration</td>\n<td style=\"text-align: left;\">默认自动关闭延时，单位秒。</td>\n<td style=\"text-align: left;\">double?</td>\n<td style=\"text-align: left;\">4.5</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">Placement</td>\n<td style=\"text-align: left;\">弹出位置，可选 <code>NotificationPlacement.TopLeft</code> <code>NotificationPlacement.TopRight</code> <code>NotificationPlacement.BottomLeft</code> <code>NotificationPlacement.BottomRight</code></td>\n<td style=\"text-align: left;\">NotificationPlacement?</td>\n<td style=\"text-align: left;\">NotificationPlacement.TopRight</td>\n</tr>\n<tr>\n<td style=\"text-align: left;\">Rtl</td>\n<td style=\"text-align: left;\">是否开启 RTL 模式</td>\n<td style=\"text-align: left;\">bool</td>\n<td style=\"text-align: left;\"><code>false</code></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/Jxm5nw61w/Notification.svg"
  },
  {
    "Title": "Popconfirm",
    "SubTitle": "气泡确认框",
    "Type": "反馈",
    "Desc": "<p>点击元素，弹出气泡式的确认框。</p>\n<h2>何时使用</h2>\n<p>目标元素的操作需要用户进一步的确认时，在目标元素附近弹出浮层提示，询问用户。</p>\n<p>和 <code>confirm</code> 弹出的全屏居中模态对话框相比，交互形式更轻量。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cancelText</td>\n<td>取消按钮文字</td>\n<td>string</td>\n<td>取消</td>\n</tr>\n<tr>\n<td>okText</td>\n<td>确认按钮文字</td>\n<td>string</td>\n<td>确定</td>\n</tr>\n<tr>\n<td>okType</td>\n<td>确认按钮类型</td>\n<td>string</td>\n<td><code>primary</code></td>\n</tr>\n<tr>\n<td>okButtonProps</td>\n<td>ok 按钮 props</td>\n<td><a href=\"/components/button/#API\">ButtonProps</a></td>\n<td>-</td>\n</tr>\n<tr>\n<td>cancelButtonProps</td>\n<td>cancel 按钮 props</td>\n<td><a href=\"/components/button/#API\">ButtonProps</a></td>\n<td>-</td>\n</tr>\n<tr>\n<td>title</td>\n<td>确认框的描述</td>\n<td>string|ReactNode|() =&gt; ReactNode</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onCancel</td>\n<td>点击取消的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onConfirm</td>\n<td>点击确认的回调</td>\n<td>function(e)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>自定义弹出气泡 Icon 图标</td>\n<td>ReactNode</td>\n<td><code>&lt;ExclamationCircle /&gt;</code></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>点击 Popconfirm 子元素是否弹出气泡确认框</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>更多属性请参考 <a href=\"/components/tooltip/#API\">Tooltip</a>。</p>\n<h2>注意</h2>\n<p>请确保 <code>Popconfirm</code> 的子元素能接受 <code>onMouseEnter</code>、<code>onMouseLeave</code>、<code>onFocus</code>、<code>onClick</code> 事件。</p>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/fjMCD9xRq/Popconfirm.svg"
  },
  {
    "Title": "Progress",
    "SubTitle": "进度条",
    "Type": "反馈",
    "Desc": "<p>展示操作的当前进度。</p>\n<h2>何时使用</h2>\n<p>在操作需要较长时间才能完成时，为用户显示该操作的当前进度和状态。</p>\n<ul>\n<li>当一个操作会打断当前界面，或者需要在后台运行，且耗时可能超过 2 秒时；</li>\n<li>当需要显示一个操作完成的百分比时。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>各类型共用的属性。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>类型，可选 <code>line</code> <code>circle</code> <code>dashboard</code></td>\n<td>string</td>\n<td><code>line</code></td>\n</tr>\n<tr>\n<td>format</td>\n<td>内容的模板函数</td>\n<td>function(percent, successPercent)</td>\n<td><code>percent =&gt; percent + '%'</code></td>\n</tr>\n<tr>\n<td>percent</td>\n<td>百分比</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>showInfo</td>\n<td>是否显示进度数值或状态图标</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>status</td>\n<td>状态，可选：<code>success</code> <code>exception</code> <code>normal</code> <code>active</code>(仅限 line)</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>strokeLinecap</td>\n<td>-</td>\n<td><code>round</code> | <code>square</code></td>\n<td><code>round</code></td>\n</tr>\n<tr>\n<td>strokeColor</td>\n<td>进度条的色彩</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>successPercent</td>\n<td>已完成的分段百分比</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>trailColor</td>\n<td>未完成的分段的颜色</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3><code>type=&quot;line&quot;</code></h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>strokeWidth</td>\n<td>进度条线的宽度，单位 px</td>\n<td>number</td>\n<td>10</td>\n</tr>\n<tr>\n<td>strokeColor</td>\n<td>进度条的色彩，传入 object 时为渐变</td>\n<td>string | { from: string; to: string; direction: string }</td>\n<td>-</td>\n</tr>\n<tr>\n<td>steps</td>\n<td>进度条总共步数</td>\n<td>number</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3><code>type=&quot;circle&quot;</code></h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td>圆形进度条画布宽度，单位 px</td>\n<td>number</td>\n<td>132</td>\n</tr>\n<tr>\n<td>strokeWidth</td>\n<td>圆形进度条线的宽度，单位是进度条画布宽度的百分比</td>\n<td>number</td>\n<td>6</td>\n</tr>\n<tr>\n<td>strokeColor</td>\n<td>圆形进度条线的色彩，传入 object 时为渐变</td>\n<td>string | object</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3><code>type=&quot;dashboard&quot;</code></h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>width</td>\n<td>仪表盘进度条画布宽度，单位 px</td>\n<td>number</td>\n<td>132</td>\n</tr>\n<tr>\n<td>strokeWidth</td>\n<td>仪表盘进度条线的宽度，单位是进度条画布宽度的百分比</td>\n<td>number</td>\n<td>6</td>\n</tr>\n<tr>\n<td>gapDegree</td>\n<td>仪表盘进度条缺口角度，可取值 0 ~ 360</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>gapPosition</td>\n<td>仪表盘进度条缺口位置</td>\n<td><code>top</code> | <code>bottom</code> | <code>left</code> | <code>right</code></td>\n<td><code>top</code></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/xqsDu4ZyR/Progress.svg"
  },
  {
    "Title": "Result",
    "SubTitle": "结果",
    "Type": "反馈",
    "Desc": "<p>用于反馈一系列操作任务的处理结果。</p>\n<h2>何时使用</h2>\n<p>当有重要操作需告知用户处理结果，且反馈内容较为复杂时使用。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Title</td>\n<td>title 文字</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>SubTitle</td>\n<td>subTitle 文字</td>\n<td>string|RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Status</td>\n<td>结果的状态,决定图标和颜色</td>\n<td><code>success</code> | <code>error</code> | <code>info</code> | <code>warning</code> | <code>404</code> | <code>403</code> | <code>500</code></td>\n<td><code>info</code></td>\n</tr>\n<tr>\n<td>Icon</td>\n<td>自定义 icon</td>\n<td>string (<code>{type}-{theme}</code>)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Extra</td>\n<td>操作区</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/9nepwjaLa/Result.svg"
  },
  {
    "Title": "Skeleton",
    "SubTitle": "骨架屏",
    "Type": "反馈",
    "Desc": "<p>在需要等待加载内容的位置提供一个占位图形组合。</p>\n<h2>何时使用</h2>\n<ul>\n<li>网络较慢，需要长时间等待加载处理的情况下。</li>\n<li>图文信息内容较多的列表/卡片中。</li>\n<li>只适合用在第一次加载数据的场景。</li>\n<li>可以被 Spin 完全代替，但是在可用的场景下可以比 Spin 提供更好的视觉效果和用户体验</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Skeleton</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Active</code></td>\n<td>是否展示动画效果</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>Avatar</code></td>\n<td>是否显示头像占位图</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>AvatarSize</code></td>\n<td>设置头像占位图的大小</td>\n<td><code>int \\| 'large' \\| 'small' \\| 'default'</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>AvatarShape</code></td>\n<td>指定头像的形状</td>\n<td><code>'circle' \\| 'square'</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>Loading</code></td>\n<td>为 <code>true</code> 时，显示占位图。反之则直接展示子组件</td>\n<td><code>boolean</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>Paragraph</code></td>\n<td>是否显示段落占位图</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>ParagraphRows</code></td>\n<td>设置段落占位图的行数</td>\n<td><code>int</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>ParagraphWidth</code></td>\n<td>设置标题占位图的宽度，若为数组时则为对应的每行宽度，反之则是最后一行的宽度</td>\n<td><code>int \\| string \\| Array&lt;int \\| string&gt;</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>Title</code></td>\n<td>是否显示标题占位图</td>\n<td><code>boolean</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>TitleWidth</code></td>\n<td>设置标题占位图的宽度</td>\n<td><code>int \\| string</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>SkeletonElement Type=&quot;button&quot;</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Active</code></td>\n<td>是否展示动画效果</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>Size</code></td>\n<td>大小</td>\n<td><code>'large' \\| 'small' \\| 'default'</code></td>\n<td><code>'default'</code></td>\n</tr>\n<tr>\n<td><code>Shape</code></td>\n<td>形状</td>\n<td><code>'circle' \\| 'round' \\| 'default'</code></td>\n<td><code>'default'</code></td>\n</tr>\n</tbody>\n</table>\n<h3>SkeletonElement Type=&quot;avatar&quot;</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Active</code></td>\n<td>是否展示动画效果</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>Size</code></td>\n<td>大小</td>\n<td><code>int \\| 'large' \\| 'small' \\| 'default'</code></td>\n<td><code>'default'</code></td>\n</tr>\n<tr>\n<td><code>Shape</code></td>\n<td>形状</td>\n<td><code>'circle' \\| 'square'</code></td>\n<td><code>'square'</code></td>\n</tr>\n</tbody>\n</table>\n<h3>SkeletonElement Type=&quot;input&quot;</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Active</code></td>\n<td>是否展示动画效果</td>\n<td><code>boolean</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>Size</code></td>\n<td>大小</td>\n<td><code>'large' \\| 'small' \\| 'default'</code></td>\n<td><code>'default'</code></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/KpcciCJgv/Skeleton.svg"
  },
  {
    "Title": "Spin",
    "SubTitle": "加载中",
    "Type": "反馈",
    "Desc": "<p>用于页面和区块的加载中状态。</p>\n<h2>何时使用</h2>\n<p>页面局部处于等待异步数据或正在渲染过程时，合适的加载动效会有效缓解用户的焦虑。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Delay</td>\n<td>延迟显示加载效果的时间（防止闪烁）</td>\n<td>number (毫秒)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Indicator</td>\n<td>加载指示符</td>\n<td>ReactNode</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Size</td>\n<td>组件大小，可选值为 <code>small</code> <code>default</code> <code>large</code></td>\n<td>string</td>\n<td>'default'</td>\n</tr>\n<tr>\n<td>Spinning</td>\n<td>是否为加载中状态</td>\n<td>boolean</td>\n<td>true</td>\n</tr>\n<tr>\n<td>Tip</td>\n<td>当作为包裹元素时，可以自定义描述文案</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>WrapperClassName</td>\n<td>包装器的类属性</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>静态方法</h3>\n<ul>\n<li><p><code>Spin.setDefaultIndicator(indicator: ReactNode)</code></p>\n<p>你可以自定义全局默认 Spin 的元素。</p>\n</li>\n</ul>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/LBcJqCPRv/Spin.svg"
  },
  {
    "Title": "Anchor",
    "SubTitle": "锚点",
    "Type": "其他",
    "Desc": "<p>用于跳转到页面指定位置。</p>\n<h2>何时使用</h2>\n<p>需要展现当前页面上可供跳转的锚点链接，以及快速在锚点之间跳转。</p>\n",
    "ApiDoc": "<h2>API</h2>\n<h3>Anchor Props</h3>\n<table>\n<thead>\n<tr>\n<th>成员</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>affix</td>\n<td>固定模式</td>\n<td>boolean</td>\n<td>true</td>\n<td></td>\n</tr>\n<tr>\n<td>bounds</td>\n<td>锚点区域边界</td>\n<td>number</td>\n<td>5(px)</td>\n<td></td>\n</tr>\n<tr>\n<td>getContainer</td>\n<td>指定滚动的容器</td>\n<td>() =&gt; HTMLElement</td>\n<td>() =&gt; window</td>\n<td></td>\n</tr>\n<tr>\n<td>offsetBottom</td>\n<td>距离窗口底部达到指定偏移量后触发</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>offsetTop</td>\n<td>距离窗口顶部达到指定偏移量后触发</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>showInkInFixed</td>\n<td>固定模式是否显示小圆点</td>\n<td>boolean</td>\n<td>false</td>\n<td></td>\n</tr>\n<tr>\n<td>onClick</td>\n<td><code>click</code> 事件的 handler</td>\n<td>Function(e: Event, link: Object)</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>getCurrentAnchor</td>\n<td>自定义高亮的锚点</td>\n<td>() =&gt; string</td>\n<td>-</td>\n<td></td>\n</tr>\n<tr>\n<td>targetOffset</td>\n<td>锚点滚动偏移量，默认与 offsetTop 相同，<a href=\"#components-anchor-demo-targetOffset\">例子</a></td>\n<td>number</td>\n<td><code>offsetTop</code></td>\n<td></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>监听锚点链接改变</td>\n<td>(currentActiveLink: string) =&gt; void</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3>Link Props</h3>\n<table>\n<thead>\n<tr>\n<th>成员</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>href</td>\n<td>锚点链接</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>文字内容</td>\n<td>string|ReactNode</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>target</td>\n<td>该属性指定在何处显示链接的资源。</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/_1-C1JwsC/Anchor.svg"
  },
  {
    "Title": "BackTop",
    "SubTitle": "回到顶部",
    "Type": "其他",
    "Desc": "<p>返回页面顶部的操作按钮。</p>\n<h2>何时使用</h2>\n<ul>\n<li>当页面内容区域比较长时；</li>\n<li>当用户需要频繁返回顶部查看相关内容时。</li>\n</ul>\n",
    "ApiDoc": "<h2>API</h2>\n<p>BackTop</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Target</td>\n<td>设置需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数</td>\n<td>RenderFragment</td>\n<td>-</td>\n</tr>\n<tr>\n<td>VisibilityHeight</td>\n<td>滚动高度达到此参数值才出现 <code>BackTop</code></td>\n<td>int</td>\n<td>-</td>\n</tr>\n<tr>\n<td>OnClick</td>\n<td>点击按钮的回调函数</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",
    "Cover": "https://gw.alipayobjects.com/zos/alicdn/tJZ5jbTwX/BackTop.svg"
  }
]