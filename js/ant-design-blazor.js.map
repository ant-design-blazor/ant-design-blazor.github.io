{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","core/JsInterop/interop.ts","main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","getDom","element","document","querySelector","body","getDomInfo","result","dom","key","item","isNaN","getBoundingClientRect","addDomEventListener","eventName","invoker","callback","args","obj","k","json","JSON","stringify","v","Node","Window","invokeMethodAsync","window","addEventListener","matchMedia","query","matches","copy","text","navigator","clipboard","writeText","then","console","log","err","error","textArea","createElement","value","style","top","left","position","appendChild","focus","select","msg","execCommand","removeChild","fallbackCopyTextToClipboard","selector","blur","BackTop","getElementById","scrollTo","interop","antBlazor"],"mappings":"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","file":"ant-design-blazor.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export function getDom(element) {\n  if (!element) {\n    element = document.body;\n  } else if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n  return element;\n}\n\nexport function getDomInfo(element) {\n  var result = {};\n\n  var dom = getDom(element);\n\n  for (var key in dom) {\n    var item = dom[key];\n    if (!item) continue;\n    if (typeof item === 'string' || (typeof item === 'number' && !isNaN(item))) result[key] = item;\n  }\n\n  return result;\n}\n\nexport function getBoundingClientRect(element) {\n  let dom = getDom(element);\n  return dom.getBoundingClientRect();\n}\n\nexport function addDomEventListener(element, eventName, invoker) {\n  let callback = args => {\n    const obj = {};\n    for (let k in args) {\n      obj[k] = args[k];\n    }\n    let json = JSON.stringify(obj, (k, v) => {\n      if (v instanceof Node) return 'Node';\n      if (v instanceof Window) return 'Window';\n      return v;\n    }, ' ');\n    invoker.invokeMethodAsync('Invoke', json);\n  };\n\n  if (element == 'window') {\n    window.addEventListener(eventName, callback);\n  } else {\n    let dom = getDom(element);\n    (dom as HTMLElement).addEventListener(eventName, callback);\n  }\n}\n\nexport function matchMedia(query) {\n  return window.matchMedia(query).matches;\n}\n\nfunction fallbackCopyTextToClipboard(text) {\n  var textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    var successful = document.execCommand('copy');\n    var msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document.body.removeChild(textArea);\n}\nexport function copy(text) {\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(function () {\n    console.log('Async: Copying to clipboard was successful!');\n  }, function (err) {\n    console.error('Async: Could not copy text: ', err);\n  });\n}\n\nexport function focus(selector) {\n  let dom = getDom(selector);\n  dom.focus();\n}\n\nexport function blur(selector) {\n  let dom = getDom(selector);\n  dom.blur();\n}\n\nexport function log(text) {\n  console.log(text);\n}\n\nexport function BackTop(element) {\n    let dom = document.getElementById(\"BodyContainer\");\n    dom.scrollTo(0, 0);\n}\n","ï»¿import * as interop from './core/JsInterop/interop'\n\ndeclare global {\n  interface Window { antBlazor: any; }\n}\n\nwindow.antBlazor = {\n  interop\n}"]}